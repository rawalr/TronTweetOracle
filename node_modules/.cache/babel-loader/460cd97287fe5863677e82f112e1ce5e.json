{"ast":null,"code":"module.exports = function (e) {\n  var t = {};\n\n  function r(n) {\n    if (t[n]) return t[n].exports;\n    var i = t[n] = {\n      i: n,\n      l: !1,\n      exports: {}\n    };\n    return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n  }\n\n  return r.m = e, r.c = t, r.d = function (e, t, n) {\n    r.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: n\n    });\n  }, r.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, r.t = function (e, t) {\n    if (1 & t && (e = r(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var i in e) {\n      r.d(n, i, function (t) {\n        return e[t];\n      }.bind(null, i));\n    }\n    return n;\n  }, r.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e.default;\n    } : function () {\n      return e;\n    };\n    return r.d(t, \"a\", t), t;\n  }, r.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, r.p = \"\", r(r.s = 21);\n}([function (e, t) {\n  e.exports = require(\"@babel/runtime/regenerator\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/classCallCheck\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/createClass\");\n}, function (e, t) {\n  e.exports = require(\"ethers\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/toConsumableArray\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/objectSpread\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");\n}, function (e, t) {\n  e.exports = require(\"axios\");\n}, function (e, t) {\n  e.exports = require(\"bignumber.js\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/slicedToArray\");\n}, function (e, t) {\n  e.exports = require(\"js-sha3\");\n}, function (e, t) {\n  e.exports = require(\"elliptic\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/defineProperty\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/typeof\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/inherits\");\n}, function (e, t) {\n  e.exports = require(\"jssha\");\n}, function (e, t) {\n  e.exports = require(\"validator\");\n}, function (e, t) {\n  e.exports = require(\"eventemitter3\");\n}, function (e, t, r) {\n  \"use strict\";\n\n  r.r(t);\n  var n = {};\n  r.r(n), r.d(n, \"byte2hexStr\", function () {\n    return T;\n  }), r.d(n, \"bytesToString\", function () {\n    return F;\n  }), r.d(n, \"hextoString\", function () {\n    return q;\n  }), r.d(n, \"base64DecodeFromString\", function () {\n    return H;\n  }), r.d(n, \"byteArray2hexStr\", function () {\n    return U;\n  });\n  var i = {};\n  r.r(i), r.d(i, \"bin2String\", function () {\n    return M;\n  }), r.d(i, \"arrayEquals\", function () {\n    return J;\n  }), r.d(i, \"stringToBytes\", function () {\n    return X;\n  }), r.d(i, \"bytesToString\", function () {\n    return Z;\n  }), r.d(i, \"hextoString\", function () {\n    return G;\n  }), r.d(i, \"hexChar2byte\", function () {\n    return $;\n  }), r.d(i, \"isHexChar\", function () {\n    return Q;\n  }), r.d(i, \"hexStr2byteArray\", function () {\n    return Y;\n  }), r.d(i, \"byte2hexStr\", function () {\n    return ee;\n  }), r.d(i, \"byteArray2hexStr\", function () {\n    return te;\n  }), r.d(i, \"base64DecodeFromString\", function () {\n    return re;\n  }), r.d(i, \"base64EncodeToString\", function () {\n    return ne;\n  }), r.d(i, \"strToDate\", function () {\n    return ie;\n  }), r.d(i, \"isNumber\", function () {\n    return se;\n  }), r.d(i, \"getStringType\", function () {\n    return oe;\n  });\n  var s = {};\n  r.r(s), r.d(s, \"encode58\", function () {\n    return le;\n  }), r.d(s, \"decode58\", function () {\n    return he;\n  });\n  var o = {};\n  r.r(o), r.d(o, \"getBase58CheckAddress\", function () {\n    return pe;\n  }), r.d(o, \"decodeBase58Address\", function () {\n    return ge;\n  }), r.d(o, \"signTransaction\", function () {\n    return be;\n  }), r.d(o, \"arrayToBase64String\", function () {\n    return me;\n  }), r.d(o, \"signBytes\", function () {\n    return ye;\n  }), r.d(o, \"getRowBytesFromTransactionBase64\", function () {\n    return xe;\n  }), r.d(o, \"genPriKey\", function () {\n    return ke;\n  }), r.d(o, \"computeAddress\", function () {\n    return Ie;\n  }), r.d(o, \"getAddressFromPriKey\", function () {\n    return we;\n  }), r.d(o, \"decode58Check\", function () {\n    return Ae;\n  }), r.d(o, \"isAddressValid\", function () {\n    return We;\n  }), r.d(o, \"getBase58CheckAddressFromPriKeyBase64String\", function () {\n    return Se;\n  }), r.d(o, \"getHexStrAddressFromPriKeyBase64String\", function () {\n    return Pe;\n  }), r.d(o, \"getAddressFromPriKeyBase64String\", function () {\n    return Ne;\n  }), r.d(o, \"getPubKeyFromPriKey\", function () {\n    return _e;\n  }), r.d(o, \"ECKeySign\", function () {\n    return Ce;\n  }), r.d(o, \"SHA256\", function () {\n    return Ee;\n  }), r.d(o, \"passwordToAddress\", function () {\n    return Be;\n  }), r.d(o, \"pkToAddress\", function () {\n    return je;\n  });\n  var a = {};\n  r.r(a), r.d(a, \"generateAccount\", function () {\n    return Te;\n  });\n  var u = {};\n  r.r(u), r.d(u, \"decodeParams\", function () {\n    return He;\n  }), r.d(u, \"encodeParams\", function () {\n    return Ue;\n  });\n\n  var d = r(14),\n      c = r.n(d),\n      l = r(0),\n      h = r.n(l),\n      f = r(1),\n      v = r.n(f),\n      p = r(2),\n      g = r.n(p),\n      b = r(3),\n      m = r.n(b),\n      y = r(15),\n      x = r.n(y),\n      k = r(16),\n      I = r.n(k),\n      w = r(17),\n      A = r.n(w),\n      W = r(7),\n      S = r.n(W),\n      P = r(13),\n      N = r.n(P),\n      _ = r(8),\n      C = r.n(_),\n      E = r(6),\n      B = r.n(E);\n\n  function j() {\n    var e = this;\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\", this.encode = function (t) {\n      for (var r, n, i, s, o, a, u, d = \"\", c = 0; c < t.length;) {\n        s = (r = t.charCodeAt(c++)) >> 2, o = (3 & r) << 4 | (n = t.charCodeAt(c++)) >> 4, a = (15 & n) << 2 | (i = t.charCodeAt(c++)) >> 6, u = 63 & i, isNaN(n) ? a = u = 64 : isNaN(i) && (u = 64), d = d + e._keyStr.charAt(s) + e._keyStr.charAt(o) + e._keyStr.charAt(a) + e._keyStr.charAt(u);\n      }\n\n      return d;\n    }, this.encodeIgnoreUtf8 = function (t) {\n      for (var r, n, i, s, o, a, u, d = \"\", c = 0; c < t.length;) {\n        s = (r = t[c++]) >> 2, o = (3 & r) << 4 | (n = t[c++]) >> 4, a = (15 & n) << 2 | (i = t[c++]) >> 6, u = 63 & i, isNaN(n) ? a = u = 64 : isNaN(i) && (u = 64), d = d + e._keyStr.charAt(s) + e._keyStr.charAt(o) + e._keyStr.charAt(a) + e._keyStr.charAt(u);\n      }\n\n      return d;\n    }, this.decode = function (t) {\n      var r,\n          n,\n          i,\n          s,\n          o,\n          a,\n          u = \"\",\n          d = 0;\n\n      for (t = t.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); d < t.length;) {\n        r = _keyStr.indexOf(t.charAt(d++)) << 2 | (s = _keyStr.indexOf(t.charAt(d++))) >> 4, n = (15 & s) << 4 | (o = _keyStr.indexOf(t.charAt(d++))) >> 2, i = (3 & o) << 6 | (a = _keyStr.indexOf(t.charAt(d++))), u += String.fromCharCode(r), 64 != o && (u += String.fromCharCode(n)), 64 != a && (u += String.fromCharCode(i));\n      }\n\n      return e._utf8_decode(u);\n    }, this.decodeToByteArray = function (t) {\n      var r,\n          n,\n          i,\n          s,\n          o,\n          a,\n          u = \"\",\n          d = 0;\n\n      for (t = t.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); d < t.length;) {\n        r = _keyStr.indexOf(t.charAt(d++)) << 2 | (s = _keyStr.indexOf(t.charAt(d++))) >> 4, n = (15 & s) << 4 | (o = _keyStr.indexOf(t.charAt(d++))) >> 2, i = (3 & o) << 6 | (a = _keyStr.indexOf(t.charAt(d++))), u += String.fromCharCode(r), 64 != o && (u += String.fromCharCode(n)), 64 != a && (u += String.fromCharCode(i));\n      }\n\n      return e._out2ByteArray(u);\n    }, this._out2ByteArray = function (e) {\n      for (var t = new Array(e.length), r = 0, n = c1 = c2 = 0; r < e.length;) {\n        n = e.charCodeAt(r), t[r] = n, r++;\n      }\n\n      return t;\n    }, this._utf8_encode = function (e) {\n      e = e.replace(/\\r\\n/g, \"\\n\");\n\n      for (var t = \"\", r = 0; r < e.length; r++) {\n        var n = e.charCodeAt(r);\n        n < 128 ? t += String.fromCharCode(n) : n > 127 && n < 2048 ? (t += String.fromCharCode(n >> 6 | 192), t += String.fromCharCode(63 & n | 128)) : (t += String.fromCharCode(n >> 12 | 224), t += String.fromCharCode(n >> 6 & 63 | 128), t += String.fromCharCode(63 & n | 128));\n      }\n\n      return t;\n    }, this._utf8_decode = function (e) {\n      for (var t = \"\", r = 0, n = c1 = c2 = 0; r < e.length;) {\n        (n = e.charCodeAt(r)) < 128 ? (t += String.fromCharCode(n), r++) : n > 191 && n < 224 ? (c2 = e.charCodeAt(r + 1), t += String.fromCharCode((31 & n) << 6 | 63 & c2), r += 2) : (c2 = e.charCodeAt(r + 1), c3 = e.charCodeAt(r + 2), t += String.fromCharCode((15 & n) << 12 | (63 & c2) << 6 | 63 & c3), r += 3);\n      }\n\n      return t;\n    };\n  }\n\n  function T(e) {\n    var t = \"\";\n    return t += \"0123456789ABCDEF\".charAt(e >> 4), t += \"0123456789ABCDEF\".charAt(15 & e);\n  }\n\n  function F(e) {\n    if (\"string\" == typeof e) return e;\n\n    for (var t = \"\", r = 0; r < e.length; r++) {\n      var n = e[r].toString(2),\n          i = n.match(/^1+?(?=0)/);\n\n      if (i && 8 === n.length) {\n        for (var s = i[0].length, o = e[r].toString(2).slice(7 - s), a = 1; a < s; a++) {\n          o += e[a + r].toString(2).slice(2);\n        }\n\n        t += String.fromCharCode(parseInt(o, 2)), r += s - 1;\n      } else t += String.fromCharCode(e[r]);\n    }\n\n    return t;\n  }\n\n  function q(e) {\n    for (var t = e.split(\"\"), r = \"\", n = 0; n < t.length / 2; n++) {\n      var i = \"0x\".concat(t[2 * n]).concat(t[2 * n + 1]);\n      r += String.fromCharCode(i);\n    }\n\n    return r;\n  }\n\n  function H(e) {\n    return new j().decodeToByteArray(e);\n  }\n\n  function U(e) {\n    for (var t = \"\", r = 0; r < e.length; r++) {\n      t += T(e[r]);\n    }\n\n    return t;\n  }\n\n  var O = r(5),\n      R = r.n(O),\n      D = r(18),\n      K = r.n(D),\n      L = 34,\n      z = \"41\",\n      V = 65;\n\n  function M(e) {\n    return String.fromCharCode.apply(String, R()(e));\n  }\n\n  function J(e, t) {\n    if (e.length != t.length) return !1;\n    var r;\n\n    for (r = 0; r < e.length; r++) {\n      if (e[r] != t[r]) return !1;\n    }\n\n    return !0;\n  }\n\n  function X(e) {\n    var t,\n        r,\n        n = new Array();\n    t = e.length;\n\n    for (var i = 0; i < t; i++) {\n      (r = e.charCodeAt(i)) >= 65536 && r <= 1114111 ? (n.push(r >> 18 & 7 | 240), n.push(r >> 12 & 63 | 128), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (n.push(r >> 12 & 15 | 224), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (n.push(r >> 6 & 31 | 192), n.push(63 & r | 128)) : n.push(255 & r);\n    }\n\n    return n;\n  }\n\n  function Z(e) {\n    if (\"string\" == typeof e) return e;\n\n    for (var t = \"\", r = 0; r < e.length; r++) {\n      var n = e[r].toString(2),\n          i = n.match(/^1+?(?=0)/);\n\n      if (i && 8 == n.length) {\n        for (var s = i[0].length, o = e[r].toString(2).slice(7 - s), a = 1; a < s; a++) {\n          o += e[a + r].toString(2).slice(2);\n        }\n\n        t += String.fromCharCode(parseInt(o, 2)), r += s - 1;\n      } else t += String.fromCharCode(e[r]);\n    }\n\n    return t;\n  }\n\n  function G(e) {\n    for (var t = e.split(\"\"), r = \"\", n = 0; n < t.length / 2; n++) {\n      var i = \"0x\".concat(t[2 * n]).concat(t[2 * n + 1]);\n      r += String.fromCharCode(i);\n    }\n\n    return r;\n  }\n\n  function $(e) {\n    var t = 0;\n    return e >= \"A\" && e <= \"F\" ? t = e.charCodeAt(0) - \"A\".charCodeAt(0) + 10 : e >= \"a\" && e <= \"f\" ? t = e.charCodeAt(0) - \"a\".charCodeAt(0) + 10 : e >= \"0\" && e <= \"9\" && (t = e.charCodeAt(0) - \"0\".charCodeAt(0)), t;\n  }\n\n  function Q(e) {\n    return e >= \"A\" && e <= \"F\" || e >= \"a\" && e <= \"f\" || e >= \"0\" && e <= \"9\" ? 1 : 0;\n  }\n\n  function Y(e) {\n    for (var t = Array(), r = 0, n = 0, i = 0, s = 0; s < e.length; s++) {\n      var o = e.charAt(s);\n      Q(o) && (r <<= 4, r += $(o), 0 == ++n % 2 && (t[i++] = r, r = 0));\n    }\n\n    return t;\n  }\n\n  function ee(e) {\n    var t = \"\";\n    return t += \"0123456789ABCDEF\".charAt(e >> 4), t += \"0123456789ABCDEF\".charAt(15 & e);\n  }\n\n  function te(e) {\n    return e.reduce(function (e, t) {\n      return e + ee(t);\n    }, \"\");\n  }\n\n  function re(e) {\n    return new j().decodeToByteArray(e);\n  }\n\n  function ne(e) {\n    return new j().encodeIgnoreUtf8(e);\n  }\n\n  function ie(e) {\n    var t = e.split(\" \"),\n        r = t[0].split(\"-\"),\n        n = parseInt(r[0], 10),\n        i = parseInt(r[1], 10) - 1,\n        s = parseInt(r[2], 10);\n\n    if (t.length > 1) {\n      var o = t[1].split(\"-\"),\n          a = parseInt(o[0], 10),\n          u = parseInt(o[1], 10) - 1,\n          d = parseInt(o[2], 10);\n      return new Date(n, i, s, a, u, d);\n    }\n\n    return new Date(n, i, s);\n  }\n\n  function se(e) {\n    return e >= \"0\" && e <= \"9\" ? 1 : 0;\n  }\n\n  function oe(e) {\n    if (null == e) return -1;\n    if (\"string\" != typeof e) return -1;\n    if (0 == e.length || \"\" == e) return -1;\n    var t = 0;\n    if (40 == e.length) for (; t < 40; t++) {\n      if (!Q(e.charAt(t))) break;\n    }\n    if (40 == t) return 1;\n\n    for (t = 0; t < e.length; t++) {\n      if (!se(e.charAt(t))) break;\n    }\n\n    if (t == e.length) return 2;\n\n    for (t = 0; t < e.length; t++) {\n      if (e.charAt(t) > \" \") return 3;\n    }\n\n    return -1;\n  }\n\n  for (var ae = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\", ue = {}, de = 0; de < ae.length; de++) {\n    ue[ae.charAt(de)] = de;\n  }\n\n  var ce = 58;\n\n  function le(e) {\n    if (0 === e.length) return \"\";\n    var t,\n        r,\n        n = [0];\n\n    for (t = 0; t < e.length; t++) {\n      for (r = 0; r < n.length; r++) {\n        n[r] <<= 8;\n      }\n\n      n[0] += e[t];\n      var i = 0;\n\n      for (r = 0; r < n.length; ++r) {\n        n[r] += i, i = n[r] / ce | 0, n[r] %= ce;\n      }\n\n      for (; i;) {\n        n.push(i % ce), i = i / ce | 0;\n      }\n    }\n\n    for (t = 0; 0 === e[t] && t < e.length - 1; t++) {\n      n.push(0);\n    }\n\n    return n.reverse().map(function (e) {\n      return ae[e];\n    }).join(\"\");\n  }\n\n  function he(e) {\n    if (0 === e.length) return [];\n    var t,\n        r,\n        n = [0];\n\n    for (t = 0; t < e.length; t++) {\n      var i = e[t];\n      if (!(i in ue)) throw new Error(\"Non-base58 character\");\n\n      for (r = 0; r < n.length; r++) {\n        n[r] *= ce;\n      }\n\n      n[0] += ue[i];\n      var s = 0;\n\n      for (r = 0; r < n.length; ++r) {\n        n[r] += s, s = n[r] >> 8, n[r] &= 255;\n      }\n\n      for (; s;) {\n        n.push(255 & s), s >>= 8;\n      }\n    }\n\n    for (t = 0; \"1\" === e[t] && t < e.length - 1; t++) {\n      n.push(0);\n    }\n\n    return n.reverse();\n  }\n\n  var fe = r(11),\n      ve = r(12);\n\n  function pe(e) {\n    var t = Ee(Ee(e)).slice(0, 4);\n    return le(t = e.concat(t));\n  }\n\n  function ge(e) {\n    if (\"string\" != typeof e) return !1;\n    if (e.length <= 4) return !1;\n    var t = he(e);\n    if (e.length <= 4) return !1;\n    var r = t.length - 4,\n        n = t.slice(r),\n        i = Ee(Ee(t = t.slice(0, r))).slice(0, 4);\n    return n[0] == i[0] && n[1] == i[1] && n[2] == i[2] && n[3] == i[3] ? t : Y(\"000000000000000000000000000000000000000000\");\n  }\n\n  function be(e, t) {\n    \"string\" == typeof e && (e = Y(e));\n    var r = Ce(Y(t.txID), e);\n    return t.signature = [r], t;\n  }\n\n  function me(e) {\n    return btoa(String.fromCharCode.apply(String, R()(e)));\n  }\n\n  function ye(e, t) {\n    return \"string\" == typeof e && (e = Y(e)), Ce(Ee(t), e);\n  }\n\n  function xe(e) {\n    var t = re(e);\n    return proto.protocol.Transaction.deserializeBinary(t).getRawData().serializeBinary();\n  }\n\n  function ke() {\n    for (var e = new ve.ec(\"secp256k1\").genKeyPair().getPrivate().toString(\"hex\"); e.length < 64;) {\n      e = \"0\".concat(e);\n    }\n\n    return Y(e);\n  }\n\n  function Ie(e) {\n    65 === e.length && (e = e.slice(1));\n    var t = Object(fe.keccak256)(e).toString();\n    return Y(z + t.substring(24));\n  }\n\n  function we(e) {\n    return Ie(_e(e));\n  }\n\n  function Ae(e) {\n    var t = he(e);\n    if (t.length <= 4) return !1;\n    var r = t.slice(0, t.length - 4),\n        n = Ee(Ee(r));\n    return n[0] === t[r.length] && n[1] === t[r.length + 1] && n[2] === t[r.length + 2] && n[3] === t[r.length + 3] && r;\n  }\n\n  function We(e) {\n    if (\"string\" != typeof e) return !1;\n    if (e.length !== L) return !1;\n    var t = he(e);\n    if (25 !== t.length) return !1;\n    if (t[0] !== V) return !1;\n    var r = t.slice(21),\n        n = Ee(Ee(t = t.slice(0, 21))).slice(0, 4);\n    return r[0] == n[0] && r[1] == n[1] && r[2] == n[2] && r[3] == n[3];\n  }\n\n  function Se(e) {\n    return pe(Ie(_e(re(e))));\n  }\n\n  function Pe(e) {\n    return U(Ie(_e(re(e))));\n  }\n\n  function Ne(e) {\n    return ne(Ie(_e(re(e))));\n  }\n\n  function _e(e) {\n    for (var t = new ve.ec(\"secp256k1\").keyFromPrivate(e, \"bytes\").getPublic(), r = t.x, n = t.y, i = r.toString(\"hex\"); i.length < 64;) {\n      i = \"0\".concat(i);\n    }\n\n    for (var s = n.toString(\"hex\"); s.length < 64;) {\n      s = \"0\".concat(s);\n    }\n\n    return Y(\"04\".concat(i).concat(s));\n  }\n\n  function Ce(e, t) {\n    for (var r = new ve.ec(\"secp256k1\").keyFromPrivate(t, \"bytes\").sign(e), n = r.r, i = r.s, s = r.recoveryParam, o = n.toString(\"hex\"); o.length < 64;) {\n      o = \"0\".concat(o);\n    }\n\n    for (var a = i.toString(\"hex\"); a.length < 64;) {\n      a = \"0\".concat(a);\n    }\n\n    return o + a + T(s);\n  }\n\n  function Ee(e) {\n    var t = new K.a(\"SHA-256\", \"HEX\"),\n        r = U(e);\n    return t.update(r), Y(t.getHash(\"HEX\"));\n  }\n\n  function Be(e) {\n    return pe(we(re(e)));\n  }\n\n  function je(e) {\n    return pe(we(Y(e)));\n  }\n\n  function Te() {\n    var e = ke(),\n        t = _e(e),\n        r = we(e);\n\n    return {\n      privateKey: U(e),\n      publicKey: U(t),\n      address: {\n        base58: pe(r),\n        hex: U(r)\n      }\n    };\n  }\n\n  var Fe = r(4),\n      qe = new Fe.utils.AbiCoder();\n\n  function He(e, t, r, n) {\n    if (r && \"boolean\" != typeof r || (n = r, r = t, t = e, e = []), n && r.replace(/^0x/, \"\").length % 64 == 8 && (r = \"0x\" + r.replace(/^0x/, \"\").substring(8)), r.replace(/^0x/, \"\").length % 64) throw new Error(\"The encoded string is not valid. Its length must be a multiple of 64.\");\n    return qe.decode(t, r).reduce(function (r, n, i) {\n      return \"address\" == t[i] && (n = \"41\" + n.substr(2).toLowerCase()), e.length ? r[e[i]] = n : r.push(n), r;\n    }, e.length ? {} : []);\n  }\n\n  function Ue(e, t) {\n    for (var r = 0; r < e.length; r++) {\n      \"address\" === e[r] && (t[r] = it.address.toHex(t[r]).replace(/^41/, \"0x\"));\n    }\n\n    return qe.encode(e, t);\n  }\n\n  var Oe = r(19),\n      Re = r.n(Oe),\n      De = r(9),\n      Ke = r.n(De),\n      Le = {\n    isValidURL: function isValidURL(e) {\n      return Re.a.isURL(e.toString(), {\n        protocols: [\"http\", \"https\"]\n      });\n    },\n    isObject: function isObject(e) {\n      return e === Object(e) && \"[object Array]\" !== Object.prototype.toString.call(e);\n    },\n    isArray: function isArray(e) {\n      return Array.isArray(e);\n    },\n    isJson: function isJson(e) {\n      try {\n        return !!JSON.parse(e);\n      } catch (e) {\n        return !1;\n      }\n    },\n    isBoolean: function isBoolean(e) {\n      return \"boolean\" == typeof e;\n    },\n    isBigNumber: function isBigNumber(e) {\n      return e && (e instanceof Ke.a || e.constructor && \"BigNumber\" === e.constructor.name);\n    },\n    isString: function isString(e) {\n      return \"string\" == typeof e || e && e.constructor && \"String\" === e.constructor.name;\n    },\n    isFunction: function isFunction(e) {\n      return \"function\" == typeof e;\n    },\n    isHex: function isHex(e) {\n      return \"string\" == typeof e && !isNaN(parseInt(e, 16));\n    },\n    isInteger: function isInteger(e) {\n      return Number.isInteger(Number(e));\n    },\n    hasProperty: function hasProperty(e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    },\n    hasProperties: function hasProperties(e) {\n      for (var t = this, r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) {\n        n[i - 1] = arguments[i];\n      }\n\n      return n.length && !n.map(function (r) {\n        return t.hasProperty(e, r);\n      }).includes(!1);\n    },\n    injectPromise: function injectPromise(e) {\n      for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n        r[n - 1] = arguments[n];\n      }\n\n      return new Promise(function (t, n) {\n        e.apply(void 0, r.concat([function (e, r) {\n          e ? n(e) : t(r);\n        }]));\n      });\n    },\n    promiseInjector: function promiseInjector(e) {\n      var t = this;\n      return function (r) {\n        for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++) {\n          i[s - 1] = arguments[s];\n        }\n\n        return t.injectPromise.apply(t, [r.bind(e)].concat(i));\n      };\n    },\n    mapEvent: function mapEvent(e) {\n      return {\n        block: e.block_number,\n        timestamp: e.block_timestamp,\n        contract: e.contract_address,\n        name: e.event_name,\n        transaction: e.transaction_id,\n        result: e.result,\n        resourceNode: e.resource_Node\n      };\n    },\n    parseEvent: function parseEvent(e, t) {\n      var r = t.inputs;\n      if (!e.result) return e;\n      if (this.isObject(e.result)) for (var n = 0; n < r.length; n++) {\n        var i = r[n];\n        \"address\" == i.type && i.name in e.result && (e.result[i.name] = \"41\" + e.result[i.name].substr(2).toLowerCase());\n      } else this.isArray(e.result) && (e.result = e.result.reduce(function (e, t, n) {\n        var i = r[n],\n            s = i.name;\n        return \"address\" == i.type && (t = \"41\" + t.substr(2).toLowerCase()), e[s] = t, e;\n      }, {}));\n      return e;\n    },\n    padLeft: function padLeft(e, t, r) {\n      for (var n = e.toString(); n.length < r;) {\n        n = t + n;\n      }\n\n      return n;\n    }\n  },\n      ze = B()({}, Le, {\n    code: i,\n    accounts: a,\n    base58: s,\n    bytes: n,\n    crypto: o,\n    abi: u\n  }),\n      Ve = {\n    HttpProvider: function () {\n      function e(t) {\n        var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e4,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},\n            o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : \"/\";\n        if (g()(this, e), !ze.isValidURL(t)) throw new Error(\"Invalid URL provided to HttpProvider\");\n        if (isNaN(r) || r < 0) throw new Error(\"Invalid timeout duration provided\");\n        if (!ze.isObject(s)) throw new Error(\"Invalid headers object provided\");\n        t = t.replace(/\\/+$/, \"\"), this.host = t, this.timeout = r, this.user = n, this.password = i, this.headers = s, this.statusPage = o, this.instance = C.a.create({\n          baseURL: t,\n          timeout: r,\n          headers: s,\n          auth: n && {\n            user: n,\n            password: i\n          }\n        });\n      }\n\n      return m()(e, [{\n        key: \"setStatusPage\",\n        value: function value() {\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"/\";\n          this.statusPage = e;\n        }\n      }, {\n        key: \"isConnected\",\n        value: function () {\n          var e = v()(h.a.mark(function e() {\n            var t,\n                r = arguments;\n            return h.a.wrap(function (e) {\n              for (;;) {\n                switch (e.prev = e.next) {\n                  case 0:\n                    return t = r.length > 0 && void 0 !== r[0] ? r[0] : this.statusPage, e.abrupt(\"return\", this.request(t).then(function (e) {\n                      return ze.hasProperties(e, \"blockID\", \"block_header\");\n                    }).catch(function () {\n                      return !1;\n                    }));\n\n                  case 2:\n                  case \"end\":\n                    return e.stop();\n                }\n              }\n            }, e, this);\n          }));\n          return function () {\n            return e.apply(this, arguments);\n          };\n        }()\n      }, {\n        key: \"request\",\n        value: function value(e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"get\";\n          return r = r.toLowerCase(), this.instance.request({\n            data: \"post\" == r && t,\n            params: \"get\" == r && t,\n            url: e,\n            method: r\n          }).then(function (e) {\n            return e.data;\n          });\n        }\n      }]), e;\n    }()\n  },\n      Me = r(20),\n      Je = r.n(Me),\n      Xe = r(10),\n      Ze = r.n(Xe),\n      Ge = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (g()(this, e), !t || !t instanceof it) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = ze.promiseInjector(this);\n    }\n\n    return m()(e, [{\n      key: \"sendTrx\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return ze.isFunction(r) && (n = r, r = this.tronWeb.defaultAddress.hex), n ? this.tronWeb.isAddress(e) ? !ze.isInteger(t) || t <= 0 ? n(\"Invalid amount provided\") : this.tronWeb.isAddress(r) ? (e = this.tronWeb.address.toHex(e)) === (r = this.tronWeb.address.toHex(r)) ? n(\"Cannot transfer TRX to the same account\") : void this.tronWeb.fullNode.request(\"wallet/createtransaction\", {\n          to_address: e,\n          owner_address: r,\n          amount: parseInt(t)\n        }, \"post\").then(function (e) {\n          if (e.Error) return n(e.Error);\n          n(null, e);\n        }).catch(function (e) {\n          return n(e);\n        }) : n(\"Invalid origin address provided\") : n(\"Invalid recipient address provided\") : this.injectPromise(this.sendTrx, e, t, r);\n      }\n    }, {\n      key: \"sendToken\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        return ze.isFunction(n) && (i = n, n = this.tronWeb.defaultAddress.hex), i ? this.tronWeb.isAddress(e) ? !ze.isInteger(t) || t <= 0 ? i(\"Invalid amount provided\") : ze.isString(r) && r.length ? this.tronWeb.isAddress(n) ? (e = this.tronWeb.address.toHex(e), r = this.tronWeb.fromUtf8(r), e === (n = this.tronWeb.address.toHex(n)) ? i(\"Cannot transfer tokens to the same account\") : void this.tronWeb.fullNode.request(\"wallet/transferasset\", {\n          to_address: e,\n          owner_address: n,\n          asset_name: r,\n          amount: parseInt(t)\n        }, \"post\").then(function (e) {\n          if (e.Error) return i(e.Error);\n          i(null, e);\n        }).catch(function (e) {\n          return i(e);\n        })) : i(\"Invalid origin address provided\") : i(\"Invalid token ID provided\") : i(\"Invalid recipient address provided\") : this.injectPromise(this.sendToken, e, t, r, n);\n      }\n    }, {\n      key: \"purchaseToken\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        return ze.isFunction(n) && (i = n, n = this.tronWeb.defaultAddress.hex), i ? this.tronWeb.isAddress(e) ? ze.isString(t) && t.length ? !ze.isInteger(r) || r <= 0 ? i(\"Invalid amount provided\") : this.tronWeb.isAddress(n) ? void this.tronWeb.fullNode.request(\"wallet/participateassetissue\", {\n          to_address: this.tronWeb.address.toHex(e),\n          owner_address: this.tronWeb.address.toHex(n),\n          asset_name: this.tronWeb.fromUtf8(t),\n          amount: parseInt(r)\n        }, \"post\").then(function (e) {\n          if (e.Error) return i(e.Error);\n          i(null, e);\n        }).catch(function (e) {\n          return i(e);\n        }) : i(\"Invalid buyer address provided\") : i(\"Invalid token ID provided\") : i(\"Invalid issuer address provided\") : this.injectPromise(this.purchaseToken, e, t, r, n);\n      }\n    }, {\n      key: \"freezeBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"BANDWIDTH\",\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        return ze.isFunction(r) && (i = r, r = 3), ze.isFunction(n) && (i = n, n = \"BANDWIDTH\"), i ? this.tronWeb.isAddress(e) ? !ze.isInteger(t) || t <= 0 ? i(\"Invalid amount provided\") : !ze.isInteger(r) || r < 3 ? i(\"Invalid duration provided, minimum of 3 days\") : void this.tronWeb.fullNode.request(\"wallet/freezebalance\", {\n          owner_address: this.tronWeb.address.toHex(e),\n          frozen_balance: parseInt(t),\n          frozen_duration: parseInt(r),\n          resource: n\n        }, \"post\").then(function (e) {\n          if (e.Error) return i(e.Error);\n          i(null, e);\n        }).catch(function (e) {\n          return i(e);\n        }) : i(\"Invalid address provided\") : this.injectPromise(this.freezeBalance, e, t, r, n);\n      }\n    }, {\n      key: \"unfreezeBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"BANDWIDTH\",\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(e) && (r = e, e = this.tronWeb.defaultAddress.hex), ze.isFunction(t) && (r = t, t = \"BANDWIDTH\"), r ? this.tronWeb.isAddress(e) ? void this.tronWeb.fullNode.request(\"wallet/unfreezebalance\", {\n          owner_address: this.tronWeb.address.toHex(e),\n          resource: t\n        }, \"post\").then(function (e) {\n          if (e.Error) return r(e.Error);\n          r(null, e);\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid address provided\") : this.injectPromise(this.unfreezeBalance, e, t);\n      }\n    }, {\n      key: \"withdrawBlockRewards\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return ze.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? void this.tronWeb.fullNode.request(\"wallet/withdrawbalance\", {\n          owner_address: this.tronWeb.address.toHex(e)\n        }, \"post\").then(function (e) {\n          if (e.Error) return t(e.Error);\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : t(\"Invalid address provided\") : this.injectPromise(this.withdrawBlockRewards, e);\n      }\n    }, {\n      key: \"applyForSR\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isValidURL(e) && (r = t || !1, t = e, e = this.tronWeb.defaultAddress.hex), r ? this.tronWeb.isAddress(e) ? ze.isValidURL(t) ? void this.tronWeb.fullNode.request(\"wallet/createwitness\", {\n          owner_address: this.tronWeb.address.toHex(e),\n          url: this.tronWeb.fromUtf8(t)\n        }, \"post\").then(function (e) {\n          if (e.Error) return r(e.Error);\n          r(null, e);\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid url provided\") : r(\"Invalid address provided\") : this.injectPromise(this.applyForSR, e, t);\n      }\n    }, {\n      key: \"vote\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (ze.isFunction(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.vote, t, r);\n        if (!ze.isObject(t) || !Object.keys(t).length) return n(\"Invalid votes object provided\");\n        if (!this.tronWeb.isAddress(r)) return n(\"Invalid voter address provided\");\n        var i = !1;\n        t = Object.entries(t).map(function (t) {\n          var r = Ze()(t, 2),\n              s = r[0],\n              o = r[1];\n          if (!i) return e.tronWeb.isAddress(s) ? !ze.isInteger(o) || o <= 0 ? (n(\"Invalid vote count provided for SR: \" + s), i = !0) : {\n            vote_address: e.tronWeb.address.toHex(s),\n            vote_count: parseInt(o)\n          } : (n(\"Invalid SR address provided: \" + s), i = !0);\n        }), i || this.tronWeb.fullNode.request(\"wallet/votewitnessaccount\", {\n          owner_address: this.tronWeb.address.toHex(r),\n          votes: t\n        }, \"post\").then(function (e) {\n          if (e.Error) return n(e.Error);\n          n(null, e);\n        }).catch(function (e) {\n          return n(e);\n        });\n      }\n    }, {\n      key: \"createSmartContract\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (ze.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createSmartContract, e, t);\n        var n = e.abi,\n            i = void 0 !== n && n,\n            s = e.bytecode,\n            o = void 0 !== s && s,\n            a = e.feeLimit,\n            u = void 0 === a ? 1e9 : a,\n            d = e.callValue,\n            c = void 0 === d ? 0 : d,\n            l = e.userFeePercentage,\n            h = void 0 === l ? 0 : l,\n            f = e.parameters,\n            v = void 0 === f ? [] : f,\n            p = e.name,\n            g = void 0 === p ? \"\" : p;\n        if (i && ze.isString(i)) try {\n          i = JSON.parse(i);\n        } catch (e) {\n          return r(\"Invalid options.abi provided\");\n        }\n        if (!ze.isArray(i)) return r(\"Invalid options.abi provided\");\n        var b = i.some(function (e) {\n          return \"constructor\" == e.type && e.payable;\n        });\n        if (!ze.isHex(o)) return r(\"Invalid options.bytecode provided\");\n        if (!ze.isInteger(u) || u <= 0 || u > 1e9) return r(\"Invalid options.feeLimit provided\");\n        if (!ze.isInteger(c) || c < 0) return r(\"Invalid options.callValue provided\");\n        if (b && 0 == c) return r(\"When contract is payable, options.callValue must be a positive integer\");\n        if (!b && c > 0) return r(\"When contract is not payable, options.callValue must be 0\");\n        if (!ze.isInteger(h) || h < 0 || h > 100) return r(\"Invalid options.userFeePercentage provided\");\n        if (!ze.isArray(v)) return r(\"Invalid parameters provided\");\n        if (!this.tronWeb.isAddress(t)) return r(\"Invalid issuer address provided\");\n        var m = i.find(function (e) {\n          return \"constructor\" === e.type;\n        });\n\n        if (void 0 !== m && m) {\n          var y = new Fe.utils.AbiCoder(),\n              x = [],\n              k = [];\n          if (m = m.inputs, v.length != m.length) return r(\"constructor needs \".concat(m.length, \" but \").concat(v.length, \" provided\"));\n\n          for (var I = 0; I < v.length; I++) {\n            var w = m[I].type,\n                A = v[I];\n            if (!w || !ze.isString(w) || !w.length) return r(\"Invalid parameter type provided: \" + w);\n            \"address\" == w && (A = this.tronWeb.address.toHex(A).replace(/^(41)/, \"0x\")), x.push(w), k.push(A);\n          }\n\n          try {\n            v = y.encode(x, k).replace(/^(0x)/, \"\");\n          } catch (e) {\n            return r(e);\n          }\n        } else v = \"\";\n\n        this.tronWeb.fullNode.request(\"wallet/deploycontract\", {\n          owner_address: this.tronWeb.address.toHex(t),\n          fee_limit: parseInt(u),\n          call_value: parseInt(c),\n          consume_user_resource_percent: h,\n          abi: JSON.stringify(i),\n          bytecode: o,\n          parameter: v,\n          name: g\n        }, \"post\").then(function (e) {\n          if (e.Error) return r(e.Error);\n          r(null, e);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"triggerSmartContract\",\n      value: function value(e, t) {\n        var r = this,\n            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e9,\n            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,\n            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],\n            o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : this.tronWeb.defaultAddress.hex,\n            a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (ze.isFunction(o) && (a = o, o = this.tronWeb.defaultAddress.hex), ze.isFunction(s) && (a = s, s = []), ze.isFunction(i) && (a = i, i = 0), ze.isFunction(n) && (a = n, n = 1e9), !a) return this.injectPromise(this.triggerSmartContract, e, t, n, i, s, o);\n        if (!this.tronWeb.isAddress(e)) return a(\"Invalid contract address provided\");\n        if (!ze.isString(t) || !t.length) return a(\"Invalid function selector provided\");\n        if (!ze.isInteger(i) || i < 0) return a(\"Invalid call value provided\");\n        if (!ze.isInteger(n) || n <= 0 || n > 1e9) return a(\"Invalid fee limit provided\");\n        if (!ze.isArray(s)) return a(\"Invalid parameters provided\");\n        if (!this.tronWeb.isAddress(o)) return a(\"Invalid issuer address provided\");\n\n        if (t = t.replace(\"/s*/g\", \"\"), s.length) {\n          for (var u = new Fe.utils.AbiCoder(), d = [], c = [], l = 0; l < s.length; l++) {\n            var h = s[l],\n                f = h.type,\n                v = h.value;\n            if (!f || !ze.isString(f) || !f.length) return a(\"Invalid parameter type provided: \" + f);\n            \"address\" == f && (v = this.tronWeb.address.toHex(v).replace(/^(41)/, \"0x\")), d.push(f), c.push(v);\n          }\n\n          try {\n            s = u.encode(d, c).replace(/^(0x)/, \"\");\n          } catch (e) {\n            return a(e);\n          }\n        } else s = \"\";\n\n        this.tronWeb.fullNode.request(\"wallet/triggersmartcontract\", {\n          contract_address: this.tronWeb.address.toHex(e),\n          owner_address: this.tronWeb.address.toHex(o),\n          function_selector: t,\n          fee_limit: parseInt(n),\n          call_value: parseInt(i),\n          parameter: s\n        }, \"post\").then(function (e) {\n          return e.Error ? a(e.Error) : e.result && e.result.message ? a(r.tronWeb.toUtf8(e.result.message)) : e.result.result ? void a(null, e) : a(e);\n        }).catch(function (e) {\n          return a(e);\n        });\n      }\n    }, {\n      key: \"createToken\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (ze.isFunction(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.createToken, t, r);\n\n        var i = t.name,\n            s = void 0 !== i && i,\n            o = t.abbreviation,\n            a = void 0 !== o && o,\n            u = t.description,\n            d = void 0 !== u && u,\n            c = t.url,\n            l = void 0 !== c && c,\n            h = t.totalSupply,\n            f = void 0 === h ? 0 : h,\n            v = t.trxRatio,\n            p = void 0 === v ? 1 : v,\n            g = t.tokenRatio,\n            b = void 0 === g ? 1 : g,\n            m = t.saleStart,\n            y = void 0 === m ? Date.now() : m,\n            x = t.saleEnd,\n            k = void 0 !== x && x,\n            I = t.freeBandwidth,\n            w = void 0 === I ? 0 : I,\n            A = t.freeBandwidthLimit,\n            W = void 0 === A ? 0 : A,\n            S = t.frozenAmount,\n            P = void 0 === S ? 0 : S,\n            N = t.frozenDuration,\n            _ = void 0 === N ? 0 : N;\n\n        return ze.isString(s) && s.length ? ze.isString(a) && a.length ? !ze.isInteger(f) || f <= 0 ? n(\"Invalid supply amount provided\") : !ze.isInteger(p) || p <= 0 ? n(\"TRX ratio must be a positive integer\") : !ze.isInteger(b) || b <= 0 ? n(\"Token ratio must be a positive integer\") : !ze.isInteger(y) || y < Date.now() ? n(\"Invalid sale start timestamp provided\") : !ze.isInteger(k) || k <= y ? n(\"Invalid sale end timestamp provided\") : ze.isString(d) && d.length ? ze.isString(l) && l.length && ze.isValidURL(l) ? !ze.isInteger(w) || w < 0 ? n(\"Invalid free bandwidth amount provided\") : !ze.isInteger(W) || W < 0 || w && !W ? n(\"Invalid free bandwidth limit provided\") : !ze.isInteger(P) || P < 0 || !_ && P ? n(\"Invalid frozen supply provided\") : !ze.isInteger(_) || _ < 0 || _ && !P ? n(\"Invalid frozen duration provided\") : this.tronWeb.isAddress(r) ? void this.tronWeb.fullNode.request(\"wallet/createassetissue\", {\n          owner_address: this.tronWeb.address.toHex(r),\n          name: this.tronWeb.fromUtf8(s),\n          abbr: this.tronWeb.fromUtf8(a),\n          description: this.tronWeb.fromUtf8(d),\n          url: this.tronWeb.fromUtf8(l),\n          total_supply: parseInt(f),\n          trx_num: parseInt(p),\n          num: parseInt(b),\n          start_time: parseInt(y),\n          end_time: parseInt(k),\n          free_asset_net_limit: parseInt(w),\n          public_free_asset_net_limit: parseInt(W),\n          frozen_supply: {\n            frozen_amount: parseInt(P),\n            frozen_days: parseInt(_)\n          }\n        }, \"post\").then(function (t) {\n          return t.Error ? n(t.Error) : t.result && t.result.message ? n(e.tronWeb.toUtf8(t.result.message)) : void n(null, t);\n        }).catch(function (e) {\n          return n(e);\n        }) : n(\"Invalid issuer address provided\") : n(\"Invalid token url provided\") : n(\"Invalid token description provided\") : n(\"Invalid token abbreviation provided\") : n(\"Invalid token name provided\");\n      }\n    }, {\n      key: \"updateAccount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), r ? ze.isString(e) && e.length ? this.tronWeb.isAddress(t) ? void this.tronWeb.fullNode.request(\"wallet/updateaccount\", {\n          account_name: stringUtf8toHex(e),\n          owner_address: this.tronWeb.address.toHex(t)\n        }, \"post\").then(function (e) {\n          if (e.Error) return r(e.Error);\n          r(null, e);\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid origin address provided\") : r(\"Name must be a string\") : this.injectPromise(this.updateAccount, e, t);\n      }\n    }, {\n      key: \"updateToken\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (ze.isFunction(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.updateToken, t, r);\n        var i = t.description,\n            s = void 0 !== i && i,\n            o = t.url,\n            a = void 0 !== o && o,\n            u = t.freeBandwidth,\n            d = void 0 === u ? 0 : u,\n            c = t.freeBandwidthLimit,\n            l = void 0 === c ? 0 : c;\n        return !ze.isInteger(d) || d < 0 ? n(\"Invalid free bandwidth amount provided\") : !ze.isInteger(l) || l < 0 || d && !l ? n(\"Invalid free bandwidth limit provided\") : this.tronWeb.isAddress(r) ? void this.tronWeb.fullNode.request(\"wallet/updateasset\", {\n          owner_address: this.tronWeb.address.toHex(r),\n          description: this.tronWeb.fromUtf8(s),\n          url: this.tronWeb.fromUtf8(a),\n          new_limit: parseInt(d),\n          new_public_limit: parseInt(l)\n        }, \"post\").then(function (t) {\n          return t.Error ? n(t.Error) : t.result && t.result.message ? n(e.tronWeb.toUtf8(t.result.message)) : void n(null, t);\n        }).catch(function (e) {\n          return n(e);\n        }) : n(\"Invalid issuer address provided\");\n      }\n    }, {\n      key: \"sendAsset\",\n      value: function value() {\n        return this.sendToken.apply(this, arguments);\n      }\n    }, {\n      key: \"purchaseAsset\",\n      value: function value() {\n        return this.purchaseToken.apply(this, arguments);\n      }\n    }, {\n      key: \"createAsset\",\n      value: function value() {\n        return this.createToken.apply(this, arguments);\n      }\n    }, {\n      key: \"updateAsset\",\n      value: function value() {\n        return this.updateToken.apply(this, arguments);\n      }\n    }, {\n      key: \"createProposal\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(r) && (n = r, r = this.tronWeb.defaultAddress.hex), t ? n ? this.tronWeb.isAddress(r) ? ze.isObject(t) ? void this.tronWeb.fullNode.request(\"wallet/proposalcreate\", {\n          owner_address: this.tronWeb.address.toHex(r),\n          parameters: t\n        }, \"post\").then(function (t) {\n          return t.Error ? n(t.Error) : t.result && t.result.message ? n(e.tronWeb.toUtf8(t.result.message)) : void n(null, t);\n        }).catch(function (e) {\n          return n(e);\n        }) : n(\"Invalid parameters provided\") : n(\"Invalid issuerAddress provided\") : this.injectPromise(this.createProposal, t, r) : n(\"Invalid proposal parameters provided\");\n      }\n    }, {\n      key: \"deleteProposal\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(r) && (n = r, r = this.tronWeb.defaultAddress.hex), n ? this.tronWeb.isAddress(r) ? !ze.isInteger(t) || t < 0 ? n(\"Invalid proposalID provided\") : void this.tronWeb.fullNode.request(\"wallet/proposaldelete\", {\n          owner_address: this.tronWeb.address.toHex(r),\n          proposal_id: parseInt(t)\n        }, \"post\").then(function (t) {\n          return t.Error ? n(t.Error) : t.result && t.result.message ? n(e.tronWeb.toUtf8(t.result.message)) : void n(null, t);\n        }).catch(function (e) {\n          return n(e);\n        }) : n(\"Invalid issuerAddress provided\") : this.injectPromise(this.deleteProposal, t, r);\n      }\n    }, {\n      key: \"voteProposal\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return ze.isFunction(n) && (i = n, n = this.tronWeb.defaultAddress.hex), i ? this.tronWeb.isAddress(n) ? !ze.isInteger(t) || t < 0 ? i(\"Invalid proposalID provided\") : ze.isBoolean(r) ? void this.tronWeb.fullNode.request(\"wallet/proposalapprove\", {\n          owner_address: this.tronWeb.address.toHex(n),\n          proposal_id: parseInt(t),\n          is_add_approval: isApproval.toString()\n        }, \"post\").then(function (t) {\n          return t.Error ? i(t.Error) : t.result && t.result.message ? i(e.tronWeb.toUtf8(t.result.message)) : void i(null, t);\n        }).catch(function (e) {\n          return i(e);\n        }) : i(\"Invalid hasApproval provided\") : i(\"Invalid voterAddress address provided\") : this.injectPromise(this.voteProposal, t, r, n);\n      }\n    }, {\n      key: \"injectExchangeTokens\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        return ze.isFunction(i) && (s = i, i = this.tronWeb.defaultAddress.hex), s ? this.tronWeb.isAddress(i) ? !ze.isInteger(t) || t < 0 ? s(\"Invalid exchangeID provided\") : ze.isString(r) && r.length ? !ze.isInteger(n) || n < 1 ? s(\"Invalid tokenAmount provided\") : void this.tronWeb.fullNode.request(\"wallet/exchangeinject\", {\n          owner_address: this.tronWeb.address.toHex(i),\n          exchange_id: parseInt(t),\n          token_id: this.tronWeb.fromAscii(r),\n          quant: parseInt(n)\n        }, \"post\").then(function (t) {\n          return t.Error ? s(t.Error) : t.result && t.result.message ? s(e.tronWeb.toUtf8(t.result.message)) : void s(null, t);\n        }).catch(function (e) {\n          return s(e);\n        }) : s(\"Invalid tokenName provided\") : s(\"Invalid ownerAddress provided\") : this.injectPromise(this.injectExchangeTokens, t, r, n, i);\n      }\n    }, {\n      key: \"withdrawExchangeTokens\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        return ze.isFunction(i) && (s = i, i = this.tronWeb.defaultAddress.hex), s ? this.tronWeb.isAddress(i) ? !ze.isInteger(t) || t < 0 ? s(\"Invalid exchangeID provided\") : ze.isString(r) && r.length ? !ze.isInteger(n) || n < 1 ? s(\"Invalid tokenAmount provided\") : void this.tronWeb.fullNode.request(\"wallet/exchangewithdraw\", {\n          owner_address: this.tronWeb.address.toHex(i),\n          exchange_id: parseInt(t),\n          token_id: this.tronWeb.fromAscii(r),\n          quant: parseInt(n)\n        }, \"post\").then(function (t) {\n          return t.Error ? s(t.Error) : t.result && t.result.message ? s(e.tronWeb.toUtf8(t.result.message)) : void s(null, t);\n        }).catch(function (e) {\n          return s(e);\n        }) : s(\"Invalid tokenName provided\") : s(\"Invalid ownerAddress provided\") : this.injectPromise(this.withdrawExchangeTokens, t, r, n, i);\n      }\n    }, {\n      key: \"tradeExchangeTokens\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,\n            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            o = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        return ze.isFunction(s) && (o = s, s = this.tronWeb.defaultAddress.hex), o ? this.tronWeb.isAddress(s) ? !ze.isInteger(t) || t < 0 ? o(\"Invalid exchangeID provided\") : ze.isString(r) && r.length ? !ze.isInteger(n) || n < 1 ? o(\"Invalid tokenAmountSold provided\") : !ze.isInteger(i) || i < 1 ? o(\"Invalid tokenAmountExpected provided\") : void this.tronWeb.fullNode.request(\"wallet/exchangewithdraw\", {\n          owner_address: this.tronWeb.address.toHex(s),\n          exchange_id: parseInt(t),\n          token_id: this.tronWeb.fromAscii(r),\n          quant: parseInt(n),\n          expected: parseInt(i)\n        }, \"post\").then(function (t) {\n          return t.Error ? o(t.Error) : t.result && t.result.message ? o(e.tronWeb.toUtf8(t.result.message)) : void o(null, t);\n        }).catch(function (e) {\n          return o(e);\n        }) : o(\"Invalid tokenName provided\") : o(\"Invalid ownerAddress provided\") : this.injectPromise(this.tradeExchangeTokens, t, r, n, i, s);\n      }\n    }]), e;\n  }(),\n      $e = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (g()(this, e), !t || !t instanceof it) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = ze.promiseInjector(this);\n    }\n\n    return m()(e, [{\n      key: \"parseToken\",\n      value: function value(e) {\n        return B()({}, e, {\n          name: this.tronWeb.toUtf8(e.name),\n          abbr: e.abbr && this.tronWeb.toUtf8(e.abbr),\n          description: e.description && this.tronWeb.toUtf8(e.description),\n          url: e.url && this.tronWeb.toUtf8(e.url)\n        });\n      }\n    }, {\n      key: \"getCurrentBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request(\"wallet/getnowblock\").then(function (t) {\n          e(null, t);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return ze.isFunction(e) && (t = e, e = this.tronWeb.defaultBlock), t ? !1 === e ? t(\"No block identifier provided\") : (\"earliest\" == e && (e = 0), \"latest\" == e ? this.getCurrentBlock(t) : isNaN(e) && ze.isHex(e) ? this.getBlockByHash(e, t) : void this.getBlockByNumber(e, t)) : this.injectPromise(this.getBlock, e);\n      }\n    }, {\n      key: \"getBlockByHash\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getBlockByHash, e);\n        this.tronWeb.fullNode.request(\"wallet/getblockbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Block not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBlockByNumber\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !ze.isInteger(e) || e < 0 ? t(\"Invalid block number provided\") : void this.tronWeb.fullNode.request(\"wallet/getblockbynum\", {\n          num: parseInt(e)\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Block not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getBlockByNumber, e);\n      }\n    }, {\n      key: \"getBlockTransactionCount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (ze.isFunction(e) && (t = e, e = this.tronWeb.defaultBlock), !t) return this.injectPromise(this.getBlockTransactionCount, e);\n        this.getBlock(e).then(function (e) {\n          var r = e.transactions;\n          t(null, (void 0 === r ? [] : r).length);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getTransactionFromBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(t) && (r = t, t = 0), ze.isFunction(e) && (r = e, e = this.tronWeb.defaultBlock), r ? !ze.isInteger(t) || t < 0 ? r(\"Invalid transaction index provided\") : void this.getBlock(e).then(function (e) {\n          var n = e.transactions,\n              i = void 0 !== n && n;\n          if (!i || i.length < t) return r(\"Transaction not found in block\");\n          r(null, i[t]);\n        }).catch(function (e) {\n          return r(e);\n        }) : this.injectPromise(this.getTransactionFromBlock, e, t);\n      }\n    }, {\n      key: \"getTransaction\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getTransaction, e);\n        this.tronWeb.fullNode.request(\"wallet/gettransactionbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Transaction not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getTransactionInfo\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getTransactionInfo, e);\n        this.tronWeb.solidityNode.request(\"walletsolidity/gettransactioninfobyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getTransactionsToAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return ze.isFunction(r) && (n = r, r = 0), ze.isFunction(t) && (n = t, t = 30), n ? (e = this.tronWeb.address.toHex(e), this.getTransactionsRelated(e, \"to\", t, r, n)) : this.injectPromise(this.getTransactionsToAddress, e, t, r);\n      }\n    }, {\n      key: \"getTransactionsFromAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return ze.isFunction(r) && (n = r, r = 0), ze.isFunction(t) && (n = t, t = 30), n ? (e = this.tronWeb.address.toHex(e), this.getTransactionsRelated(e, \"from\", t, r, n)) : this.injectPromise(this.getTransactionsFromAddress, e, t, r);\n      }\n    }, {\n      key: \"getTransactionsRelated\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = u.length > 0 && void 0 !== u[0] ? u[0] : this.tronWeb.defaultAddress.hex, r = u.length > 1 && void 0 !== u[1] ? u[1] : \"all\", n = u.length > 2 && void 0 !== u[2] ? u[2] : 30, i = u.length > 3 && void 0 !== u[3] ? u[3] : 0, s = u.length > 4 && void 0 !== u[4] && u[4], ze.isFunction(i) && (s = i, i = 0), ze.isFunction(n) && (s = n, n = 30), ze.isFunction(r) && (s = r, r = \"all\"), ze.isFunction(t) && (s = t, t = this.tronWeb.defaultAddress.hex), s) {\n                    e.next = 11;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.getTransactionsRelated, t, r, n, i));\n\n                case 11:\n                  if ([\"to\", \"from\", \"all\"].includes(r)) {\n                    e.next = 13;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s('Invalid direction provided: Expected \"to\", \"from\" or \"all\"'));\n\n                case 13:\n                  if (\"all\" != r) {\n                    e.next = 27;\n                    break;\n                  }\n\n                  return e.prev = 14, e.next = 17, this.getTransactionsRelated(t, \"from\", n, i);\n\n                case 17:\n                  return o = e.sent, e.next = 20, this.getTransactionsRelated(t, \"to\", n, i);\n\n                case 20:\n                  return a = e.sent, e.abrupt(\"return\", s(null, R()(o.map(function (e) {\n                    return e.direction = \"from\", e;\n                  })).concat(R()(a.map(function (e) {\n                    return e.direction = \"to\", e;\n                  }))).sort(function (e, t) {\n                    return t.raw_data.timestamp - e.raw_data.timestamp;\n                  })));\n\n                case 24:\n                  return e.prev = 24, e.t0 = e.catch(14), e.abrupt(\"return\", s(e.t0));\n\n                case 27:\n                  if (this.tronWeb.isAddress(t)) {\n                    e.next = 29;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Invalid address provided\"));\n\n                case 29:\n                  if (!(!ze.isInteger(n) || n < 0 || i && n < 1)) {\n                    e.next = 31;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Invalid limit provided\"));\n\n                case 31:\n                  if (ze.isInteger(i) && !(i < 0)) {\n                    e.next = 33;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Invalid offset provided\"));\n\n                case 33:\n                  t = this.tronWeb.address.toHex(t), this.tronWeb.solidityNode.request(\"walletextension/gettransactions\".concat(r, \"this\"), {\n                    account: {\n                      address: t\n                    },\n                    offset: i,\n                    limit: n\n                  }, \"post\").then(function (e) {\n                    var t = e.transaction;\n                    s(null, t);\n                  }).catch(function (e) {\n                    return s(e);\n                  });\n\n                case 35:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[14, 24]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"getAccount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return ze.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.solidityNode.request(\"walletsolidity/getaccount\", {\n          address: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getAccount, e);\n      }\n    }, {\n      key: \"getBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (ze.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !t) return this.injectPromise(this.getBalance, e);\n        this.getAccount(e).then(function (e) {\n          var r = e.balance;\n          t(null, void 0 === r ? 0 : r);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBandwidth\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return ze.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request(\"wallet/getaccountnet\", {\n          address: e\n        }, \"post\").then(function (e) {\n          var r = e.freeNetUsed,\n              n = void 0 === r ? 0 : r,\n              i = e.freeNetLimit,\n              s = void 0 === i ? 0 : i,\n              o = e.NetUsed,\n              a = void 0 === o ? 0 : o,\n              u = e.NetLimit;\n          t(null, s - n + ((void 0 === u ? 0 : u) - a));\n        }).catch(function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getBandwidth, e);\n      }\n    }, {\n      key: \"getTokensIssuedByAddress\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return ze.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), r ? this.tronWeb.isAddress(t) ? (t = this.tronWeb.address.toHex(t), void this.tronWeb.fullNode.request(\"wallet/getassetissuebyaccount\", {\n          address: t\n        }, \"post\").then(function (t) {\n          var n = t.assetIssue,\n              i = void 0 !== n && n;\n          if (!i) return r(null, {});\n          var s = i.map(function (t) {\n            return e.parseToken(t);\n          }).reduce(function (e, t) {\n            return e[t.name] = t, e;\n          }, {});\n          r(null, s);\n        }).catch(function (e) {\n          return r(e);\n        })) : r(\"Invalid address provided\") : this.injectPromise(this.getTokensIssuedByAddress, t);\n      }\n    }, {\n      key: \"getTokenFromID\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? ze.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuebyname\", {\n          value: this.tronWeb.fromUtf8(t)\n        }, \"post\").then(function (t) {\n          if (!t.name) return r(\"Token does not exist\");\n          r(null, e.parseToken(t));\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\") : this.injectPromise(this.getTokenFromID, t);\n      }\n    }, {\n      key: \"listNodes\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!t) return this.injectPromise(this.listNodes);\n        this.tronWeb.fullNode.request(\"wallet/listnodes\").then(function (r) {\n          var n = r.nodes;\n          t(null, (void 0 === n ? [] : n).map(function (t) {\n            var r = t.address,\n                n = r.host,\n                i = r.port;\n            return \"\".concat(e.tronWeb.toUtf8(n), \":\").concat(i);\n          }));\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBlockRange\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(t) && (r = t, t = 30), ze.isFunction(e) && (r = e, e = 0), r ? !ze.isInteger(e) || e < 0 ? r(\"Invalid start of range provided\") : !ze.isInteger(t) || t <= e ? r(\"Invalid end of range provided\") : void this.tronWeb.fullNode.request(\"wallet/getblockbylimitnext\", {\n          startNum: parseInt(e),\n          endNum: parseInt(t) + 1\n        }, \"post\").then(function (e) {\n          var t = e.block;\n          r(null, void 0 === t ? [] : t);\n        }).catch(function (e) {\n          return r(e);\n        }) : this.injectPromise(this.getBlockRange, e, t);\n      }\n    }, {\n      key: \"listSuperRepresentatives\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listSuperRepresentatives);\n        this.tronWeb.fullNode.request(\"wallet/listwitnesses\").then(function (t) {\n          var r = t.witnesses;\n          e(null, void 0 === r ? [] : r);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"listTokens\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return ze.isFunction(r) && (n = r, r = 0), ze.isFunction(t) && (n = t, t = 0), n ? !ze.isInteger(t) || t < 0 || r && t < 1 ? n(\"Invalid limit provided\") : !ze.isInteger(r) || r < 0 ? n(\"Invalid offset provided\") : t ? void this.tronWeb.fullNode.request(\"wallet/getpaginatedassetissuelist\", {\n          offset: parseInt(r),\n          limit: parseInt(t)\n        }, \"post\").then(function (t) {\n          var r = t.assetIssue;\n          n(null, (void 0 === r ? [] : r).map(function (t) {\n            return e.parseToken(t);\n          }));\n        }).catch(function (e) {\n          return n(e);\n        }) : this.tronWeb.fullNode.request(\"wallet/getassetissuelist\").then(function (t) {\n          var r = t.assetIssue;\n          n(null, (void 0 === r ? [] : r).map(function (t) {\n            return e.parseToken(t);\n          }));\n        }).catch(function (e) {\n          return n(e);\n        }) : this.injectPromise(this.listTokens, t, r);\n      }\n    }, {\n      key: \"timeUntilNextVoteCycle\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.timeUntilNextVoteCycle);\n        this.tronWeb.fullNode.request(\"wallet/getnextmaintenancetime\").then(function (t) {\n          var r = t.num,\n              n = void 0 === r ? -1 : r;\n          if (-1 == n) return e(\"Failed to get time until next vote cycle\");\n          e(null, Math.floor(n / 1e3));\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getContract\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request(\"wallet/getcontract\", {\n          value: e\n        }).then(function (e) {\n          if (e.Error) return t(\"Contract does not exist\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        })) : t(\"Invalid contract address provided\") : this.injectPromise(this.getContract, e);\n      }\n    }, {\n      key: \"verifyMessage\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u,\n              d,\n              c = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = c.length > 0 && void 0 !== c[0] && c[0], r = c.length > 1 && void 0 !== c[1] && c[1], n = c.length > 2 && void 0 !== c[2] ? c[2] : this.tronWeb.defaultAddress.base58, i = !(c.length > 3 && void 0 !== c[3]) || c[3], s = c.length > 4 && void 0 !== c[4] && c[4], ze.isFunction(n) && (s = n, n = this.tronWeb.defaultAddress.base58, i = !0), ze.isFunction(i) && (s = i, i = !0), s) {\n                    e.next = 9;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.verifyMessage, t, r, n, i));\n\n                case 9:\n                  if (ze.isHex(t)) {\n                    e.next = 11;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Expected hex message input\"));\n\n                case 11:\n                  if (\"0x\" == t.substr(0, 2) && (t = t.substring(2)), \"0x\" == r.substr(0, 2) && (r = r.substr(2)), o = R()(Fe.utils.toUtf8Bytes(i ? \"\u0019TRON Signed Message:\\n32\" : \"\u0019Ethereum Signed Message:\\n32\")).concat(R()(ze.code.hexStr2byteArray(t))), a = Fe.utils.keccak256(o), u = Fe.utils.recoverAddress(a, {\n                    recoveryParam: \"1c\" == r.substring(128, 130) ? 1 : 0,\n                    r: \"0x\" + r.substring(0, 64),\n                    s: \"0x\" + r.substring(64, 128)\n                  }), d = \"41\" + u.substr(2), this.tronWeb.address.fromHex(d) != this.tronWeb.address.fromHex(n)) {\n                    e.next = 20;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(null, !0));\n\n                case 20:\n                  s(\"Signature does not match\");\n\n                case 21:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"sign\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u,\n              d,\n              c = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = c.length > 0 && void 0 !== c[0] && c[0], r = c.length > 1 && void 0 !== c[1] ? c[1] : this.tronWeb.defaultPrivateKey, n = !(c.length > 2 && void 0 !== c[2]) || c[2], i = c.length > 3 && void 0 !== c[3] && c[3], ze.isFunction(r) && (i = r, r = this.tronWeb.defaultPrivateKey, n = !0), ze.isFunction(n) && (i = n, n = !0), i) {\n                    e.next = 8;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.sign, t, r, n));\n\n                case 8:\n                  if (!ze.isString(t)) {\n                    e.next = 24;\n                    break;\n                  }\n\n                  if (\"0x\" == t.substring(0, 2) && (t = t.substring(2)), ze.isHex(t)) {\n                    e.next = 12;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Expected hex message input\"));\n\n                case 12:\n                  return e.prev = 12, s = new Fe.utils.SigningKey(r), o = R()(Fe.utils.toUtf8Bytes(n ? \"\u0019TRON Signed Message:\\n32\" : \"\u0019Ethereum Signed Message:\\n32\")).concat(R()(ze.code.hexStr2byteArray(t))), a = Fe.utils.keccak256(o), u = s.signDigest(a), d = [\"0x\", u.r.substring(2), u.s.substring(2), Number(u.v).toString(16)].join(\"\"), e.abrupt(\"return\", i(null, d));\n\n                case 21:\n                  e.prev = 21, e.t0 = e.catch(12), i(e.t0);\n\n                case 24:\n                  if (ze.isObject(t)) {\n                    e.next = 26;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n                case 26:\n                  if (!t.signature) {\n                    e.next = 28;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Transaction is already signed\"));\n\n                case 28:\n                  if (e.prev = 28, this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(r)).toLowerCase() === t.raw_data.contract[0].parameter.value.owner_address.toLowerCase()) {\n                    e.next = 32;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Private key does not match address in transaction\"));\n\n                case 32:\n                  return e.abrupt(\"return\", i(null, ze.crypto.signTransaction(r, t)));\n\n                case 35:\n                  e.prev = 35, e.t1 = e.catch(28), i(e.t1);\n\n                case 38:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[12, 21], [28, 35]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"sendRawTransaction\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? ze.isObject(e) ? e.signature && ze.isArray(e.signature) ? void this.tronWeb.fullNode.request(\"wallet/broadcasttransaction\", e, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : t(\"Transaction is not signed\") : t(\"Invalid transaction provided\") : this.injectPromise(this.sendRawTransaction, e);\n      }\n    }, {\n      key: \"sendTransaction\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u,\n              d = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = d.length > 0 && void 0 !== d[0] && d[0], r = d.length > 1 && void 0 !== d[1] && d[1], n = d.length > 2 && void 0 !== d[2] ? d[2] : {}, i = d.length > 3 && void 0 !== d[3] && d[3], ze.isFunction(n) && (i = n, n = {}), i) {\n                    e.next = 7;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.sendTransaction, t, r, n));\n\n                case 7:\n                  if (this.tronWeb.isAddress(t)) {\n                    e.next = 9;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Invalid recipient provided\"));\n\n                case 9:\n                  if (ze.isInteger(r) && !(r <= 0)) {\n                    e.next = 11;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Invalid amount provided\"));\n\n                case 11:\n                  if ((n = B()({\n                    privateKey: this.tronWeb.defaultPrivateKey,\n                    address: this.tronWeb.defaultAddress.hex\n                  }, n)).privateKey || n.address) {\n                    e.next = 14;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Function requires either a private key or address to be set\"));\n\n                case 14:\n                  return e.prev = 14, s = n.privateKey ? this.tronWeb.address.fromPrivateKey(n.privateKey) : n.address, e.next = 18, this.tronWeb.transactionBuilder.sendTrx(t, r, s);\n\n                case 18:\n                  return o = e.sent, e.next = 21, this.sign(o, n.privateKey || void 0);\n\n                case 21:\n                  return a = e.sent, e.next = 24, this.sendRawTransaction(a);\n\n                case 24:\n                  return u = e.sent, e.abrupt(\"return\", i(null, u));\n\n                case 28:\n                  return e.prev = 28, e.t0 = e.catch(14), e.abrupt(\"return\", i(e.t0));\n\n                case 31:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[14, 28]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"sendToken\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u,\n              d,\n              c = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = c.length > 0 && void 0 !== c[0] && c[0], r = c.length > 1 && void 0 !== c[1] && c[1], n = c.length > 2 && void 0 !== c[2] && c[2], i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, s = c.length > 4 && void 0 !== c[4] && c[4], ze.isFunction(i) && (s = i, i = {}), s) {\n                    e.next = 8;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.sendToken, t, r, n, i));\n\n                case 8:\n                  if (this.tronWeb.isAddress(t)) {\n                    e.next = 10;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Invalid recipient provided\"));\n\n                case 10:\n                  if (ze.isInteger(r) && !(r <= 0)) {\n                    e.next = 12;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Invalid amount provided\"));\n\n                case 12:\n                  if (ze.isString(n)) {\n                    e.next = 14;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Invalid token ID provided\"));\n\n                case 14:\n                  if ((i = B()({\n                    privateKey: this.tronWeb.defaultPrivateKey,\n                    address: this.tronWeb.defaultAddress.hex\n                  }, i)).privateKey || i.address) {\n                    e.next = 17;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Function requires either a private key or address to be set\"));\n\n                case 17:\n                  return e.prev = 17, o = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, e.next = 21, this.tronWeb.transactionBuilder.sendToken(t, r, n, o);\n\n                case 21:\n                  return a = e.sent, e.next = 24, this.sign(a, i.privateKey || void 0);\n\n                case 24:\n                  return u = e.sent, e.next = 27, this.sendRawTransaction(u);\n\n                case 27:\n                  return d = e.sent, e.abrupt(\"return\", s(null, d));\n\n                case 31:\n                  return e.prev = 31, e.t0 = e.catch(17), e.abrupt(\"return\", s(e.t0));\n\n                case 34:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[17, 31]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"updateAccount\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], ze.isFunction(r) && (n = r, r = this.tronWeb.defaultPrivateKey), n) {\n                    e.next = 6;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.updateAccount, t, r));\n\n                case 6:\n                  if (ze.isString(t) && t.length) {\n                    e.next = 8;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", n(\"Name must be a string\"));\n\n                case 8:\n                  return e.prev = 8, i = this.tronWeb.address.fromPrivateKey(r), e.next = 12, this.tronWeb.transactionBuilder.updateAccount(t, i);\n\n                case 12:\n                  return s = e.sent, e.next = 15, this.sign(s, r);\n\n                case 15:\n                  return o = e.sent, e.next = 18, this.sendRawTransaction(o);\n\n                case 18:\n                  return a = e.sent, e.abrupt(\"return\", n(null, a));\n\n                case 22:\n                  return e.prev = 22, e.t0 = e.catch(8), e.abrupt(\"return\", n(e.t0));\n\n                case 25:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[8, 22]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"signMessage\",\n      value: function value() {\n        return this.sign.apply(this, arguments);\n      }\n    }, {\n      key: \"sendAsset\",\n      value: function value() {\n        return this.sendToken.apply(this, arguments);\n      }\n    }, {\n      key: \"send\",\n      value: function value() {\n        return this.sendTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"sendTrx\",\n      value: function value() {\n        return this.sendTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"broadcast\",\n      value: function value() {\n        return this.sendRawTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"signTransaction\",\n      value: function value() {\n        return this.sign.apply(this, arguments);\n      }\n    }, {\n      key: \"getProposal\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !ze.isInteger(e) || e < 0 ? t(\"Invalid proposalID provided\") : void this.tronWeb.fullNode.request(\"wallet/getproposalbyid\", {\n          id: parseInt(e)\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getProposal, e);\n      }\n    }, {\n      key: \"listProposals\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listProposals);\n        this.tronWeb.fullNode.request(\"wallet/listproposals\", {}, \"post\").then(function (t) {\n          var r = t.proposals;\n          e(null, void 0 === r ? [] : r);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getChainParameters\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getChainParameters);\n        this.tronWeb.fullNode.request(\"wallet/getchainparameters\", {}, \"post\").then(function (t) {\n          var r = t.chainParameter;\n          e(null, void 0 === r ? [] : r);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getAccountResources\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? this.tronWeb.isAddress(e) ? void this.tronWeb.fullNode.request(\"wallet/getaccountresource\", {\n          address: this.tronWeb.address.toHex(e)\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : t(\"Invalid address provided\") : this.injectPromise(this.getAccountResources, e);\n      }\n    }, {\n      key: \"getExchangeByID\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !ze.isInteger(e) || e < 0 ? t(\"Invalid exchangeID provided\") : void this.tronWeb.fullNode.request(\"wallet/getexchangebyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getExchangeByID, e);\n      }\n    }, {\n      key: \"listExchanges\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listExchanges);\n        this.tronWeb.fullNode.request(\"wallet/listexchanges\", {}, \"post\").then(function (t) {\n          var r = t.exchanges;\n          e(null, void 0 === r ? [] : r);\n        }, \"post\").catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"exchangeCreate\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 ? arguments[1] : void 0,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        return s ? this.tronWeb.isAddress(e) ? ze.isString(t) && t.length && ze.isString(n) && n.length ? !ze.isInteger(r) || r <= 0 || !ze.isInteger(i) || i <= 0 ? s(\"Invalid amount provided\") : void this.tronWeb.fullNode.request(\"wallet/exchangecreate\", {\n          owner_address: this.tronWeb.address.toHex(e),\n          first_token_id: t,\n          first_token_balance: r,\n          second_token_id: n,\n          second_token_balance: i\n        }, \"post\").then(function (e) {\n          s(null, e);\n        }).catch(function (e) {\n          return s(e);\n        }) : s(\"Invalid token ID provided\") : s(\"Invalid address provided\") : this.injectPromise(this.getAccountResources, address);\n      }\n    }, {\n      key: \"exchangeTransaction\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 ? arguments[1] : void 0,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        return s ? this.tronWeb.isAddress(e) ? ze.isString(r) && r.length ? !ze.isInteger(n) || n <= 0 ? s(\"Invalid quantity provided\") : !ze.isInteger(i) || i < 0 ? s(\"Invalid expected provided\") : void this.tronWeb.fullNode.request(\"wallet/exchangetransaction\", {\n          owner_address: this.tronWeb.address.toHex(e),\n          exchange_id: t,\n          token_id: r,\n          quant: n,\n          expected: i\n        }, \"post\").then(function (e) {\n          s(null, e);\n        }).catch(function (e) {\n          return s(e);\n        }) : s(\"Invalid token ID provided\") : s(\"Invalid address provided\") : this.injectPromise(this.getAccountResources, address);\n      }\n    }, {\n      key: \"listExchangesPaginated\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (ze.isFunction(t) && (r = t, t = 0), ze.isFunction(e) && (r = e, e = 30), !r) return this.injectPromise(this.listExchanges);\n        this.tronWeb.fullNode.request(\"wallet/listexchangespaginated\", {\n          limit: e,\n          offset: t\n        }, \"post\").then(function (e) {\n          var t = e.exchanges;\n          r(null, void 0 === t ? [] : t);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }]), e;\n  }(),\n      Qe = function e() {\n    g()(this, e);\n  },\n      Ye = function Ye(e) {\n    return e.name + \"(\" + et(e.inputs || []).join(\",\") + \")\";\n  },\n      et = function et(e) {\n    return e.map(function (e) {\n      return e.type;\n    });\n  },\n      tt = function tt(e, t) {\n    var r = e.map(function (e) {\n      return e.name;\n    }).filter(function (e) {\n      return !!e;\n    }),\n        n = e.map(function (e) {\n      return e.type;\n    });\n    return ze.abi.decodeParams(r, n, t);\n  },\n      rt = function () {\n    function e(t, r) {\n      g()(this, e), this.tronWeb = t.tronWeb, this.contract = t, this.abi = r, this.name = r.name || (r.name = r.type), this.inputs = r.inputs || [], this.outputs = r.outputs || [], this.functionSelector = Ye(r), this.signature = this.tronWeb.sha3(this.functionSelector, !1).slice(0, 8), this.injectPromise = ze.promiseInjector(this), this.defaultOptions = {\n        feeLimit: 1e9,\n        callValue: 0,\n        from: this.tronWeb.defaultAddress.hex,\n        shouldPollResponse: !1\n      };\n    }\n\n    return m()(e, [{\n      key: \"decodeInput\",\n      value: function value(e) {\n        return tt(this.inputs, \"0x\" + e);\n      }\n    }, {\n      key: \"onMethod\",\n      value: function value() {\n        for (var e = this, t = arguments.length, r = new Array(t), n = 0; n < t; n++) {\n          r[n] = arguments[n];\n        }\n\n        var i = et(this.inputs);\n        return r.forEach(function (t, n) {\n          \"address\" == i[n] && (r[n] = e.tronWeb.address.toHex(t).replace(/^(41)/, \"0x\")), \"address[]\" == i[n] && (r[n] = r[n].map(function (t) {\n            return e.tronWeb.address.toHex(t).replace(/^(41)/, \"0x\");\n          }));\n        }), {\n          call: function call() {\n            for (var t = arguments.length, n = new Array(t), s = 0; s < t; s++) {\n              n[s] = arguments[s];\n            }\n\n            return e._call.apply(e, [i, r].concat(n));\n          },\n          send: function send() {\n            for (var t = arguments.length, n = new Array(t), s = 0; s < t; s++) {\n              n[s] = arguments[s];\n            }\n\n            return e._send.apply(e, [i, r].concat(n));\n          },\n          watch: function watch() {\n            return e._watch.apply(e, arguments);\n          }\n        };\n      }\n    }, {\n      key: \"_call\",\n      value: function () {\n        var e = v()(h.a.mark(function e(t, r) {\n          var n,\n              i,\n              s,\n              o,\n              a = this,\n              u = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (n = u.length > 2 && void 0 !== u[2] ? u[2] : {}, i = u.length > 3 && void 0 !== u[3] && u[3], ze.isFunction(n) && (i = n, n = {}), i) {\n                    e.next = 5;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this._call, t, r, n));\n\n                case 5:\n                  if (t.length === r.length) {\n                    e.next = 7;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Invalid argument count provided\"));\n\n                case 7:\n                  if (this.contract.address) {\n                    e.next = 9;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Smart contract is missing address\"));\n\n                case 9:\n                  if (this.contract.deployed) {\n                    e.next = 11;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i(\"Calling smart contracts requires you to load the contract first\"));\n\n                case 11:\n                  if (s = this.abi.stateMutability, [\"pure\", \"view\"].includes(s.toLowerCase())) {\n                    e.next = 14;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", i('Methods with state mutability \"'.concat(s, '\" must use send()')));\n\n                case 14:\n                  n = B()({}, this.defaultOptions, n), o = r.map(function (e, r) {\n                    return {\n                      type: t[r],\n                      value: e\n                    };\n                  }), this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n.feeLimit, n.callValue, o, this.tronWeb.address.toHex(n.from), function (e, t) {\n                    if (e) return i(e);\n                    if (!ze.hasProperty(t, \"constant_result\")) return i(\"Failed to execute\");\n\n                    try {\n                      var r = tt(a.outputs, \"0x\" + t.constant_result[0]);\n                      return 1 === r.length && (r = r[0]), i(null, r);\n                    } catch (e) {\n                      return i(e);\n                    }\n                  });\n\n                case 17:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function (t, r) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_send\",\n      value: function () {\n        var e = v()(h.a.mark(function e(t, r) {\n          var n,\n              i,\n              s,\n              o,\n              a,\n              u,\n              d,\n              c,\n              l,\n              f,\n              p = this,\n              g = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (n = g.length > 2 && void 0 !== g[2] ? g[2] : {}, i = g.length > 3 && void 0 !== g[3] ? g[3] : this.tronWeb.defaultPrivateKey, s = g.length > 4 && void 0 !== g[4] && g[4], ze.isFunction(i) && (s = i, i = this.tronWeb.defaultPrivateKey), ze.isFunction(n) && (s = n, n = {}), s) {\n                    e.next = 7;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this._send, t, r, n, i));\n\n                case 7:\n                  if (t.length === r.length) {\n                    e.next = 9;\n                    break;\n                  }\n\n                  throw new Error(\"Invalid argument count provided\");\n\n                case 9:\n                  if (this.contract.address) {\n                    e.next = 11;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Smart contract is missing address\"));\n\n                case 11:\n                  if (this.contract.deployed) {\n                    e.next = 13;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Calling smart contracts requires you to load the contract first\"));\n\n                case 13:\n                  if (o = this.abi.stateMutability, ![\"pure\", \"view\"].includes(o.toLowerCase())) {\n                    e.next = 16;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s('Methods with state mutability \"'.concat(o, '\" must use call()')));\n\n                case 16:\n                  return [\"payable\"].includes(o.toLowerCase()) || (n.callValue = 0), n = B()({}, this.defaultOptions, n), a = r.map(function (e, r) {\n                    return {\n                      type: t[r],\n                      value: e\n                    };\n                  }), e.prev = 19, u = i ? this.tronWeb.address.fromPrivateKey(i) : this.tronWeb.defaultAddress.base58, e.next = 23, this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n.feeLimit, n.callValue, a, this.tronWeb.address.toHex(u));\n\n                case 23:\n                  if ((d = e.sent).result && d.result.result) {\n                    e.next = 26;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Unknown error: \" + JSON.stringify(d, null, 2)));\n\n                case 26:\n                  return e.next = 28, this.tronWeb.trx.sign(d.transaction, i);\n\n                case 28:\n                  if ((c = e.sent).signature) {\n                    e.next = 35;\n                    break;\n                  }\n\n                  if (i) {\n                    e.next = 34;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Transaction was not signed properly\"));\n\n                case 34:\n                  return e.abrupt(\"return\", s(\"Invalid private key provided\"));\n\n                case 35:\n                  return e.next = 37, this.tronWeb.trx.sendRawTransaction(c);\n\n                case 37:\n                  if ((l = e.sent).result) {\n                    e.next = 40;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(\"Unknown error: \" + JSON.stringify(l, null, 2)));\n\n                case 40:\n                  if (n.shouldPollResponse) {\n                    e.next = 42;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", s(null, c.txID));\n\n                case 42:\n                  (f = function () {\n                    var e = v()(h.a.mark(function e() {\n                      var t,\n                          r,\n                          n,\n                          i = arguments;\n                      return h.a.wrap(function (e) {\n                        for (;;) {\n                          switch (e.prev = e.next) {\n                            case 0:\n                              if (20 != (t = i.length > 0 && void 0 !== i[0] ? i[0] : 0)) {\n                                e.next = 3;\n                                break;\n                              }\n\n                              return e.abrupt(\"return\", s({\n                                error: \"Cannot find result in solidity node\",\n                                transaction: c\n                              }));\n\n                            case 3:\n                              return e.next = 5, p.tronWeb.trx.getTransactionInfo(c.txID);\n\n                            case 5:\n                              if (r = e.sent, Object.keys(r).length) {\n                                e.next = 8;\n                                break;\n                              }\n\n                              return e.abrupt(\"return\", setTimeout(function () {\n                                f(t + 1);\n                              }, 3e3));\n\n                            case 8:\n                              if (!r.result || \"FAILED\" != r.result) {\n                                e.next = 10;\n                                break;\n                              }\n\n                              return e.abrupt(\"return\", s({\n                                error: p.tronWeb.toUtf8(r.resMessage),\n                                transaction: c,\n                                output: r\n                              }));\n\n                            case 10:\n                              if (ze.hasProperty(r, \"contractResult\")) {\n                                e.next = 12;\n                                break;\n                              }\n\n                              return e.abrupt(\"return\", s({\n                                error: \"Failed to execute: \" + JSON.stringify(r, null, 2),\n                                transaction: c,\n                                output: r\n                              }));\n\n                            case 12:\n                              return 1 === (n = tt(p.outputs, \"0x\" + r.contractResult[0])).length && (n = n[0]), e.abrupt(\"return\", s(null, n));\n\n                            case 15:\n                            case \"end\":\n                              return e.stop();\n                          }\n                        }\n                      }, e, this);\n                    }));\n                    return function () {\n                      return e.apply(this, arguments);\n                    };\n                  }())(), e.next = 49;\n                  break;\n\n                case 46:\n                  return e.prev = 46, e.t0 = e.catch(19), e.abrupt(\"return\", s(e.t0));\n\n                case 49:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[19, 46]]);\n        }));\n        return function (t, r) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_watch\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u = this,\n              d = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = d.length > 0 && void 0 !== d[0] ? d[0] : {}, r = d.length > 1 && void 0 !== d[1] && d[1], ze.isFunction(t) && (r = t, t = {}), ze.isFunction(r)) {\n                    e.next = 5;\n                    break;\n                  }\n\n                  throw new Error(\"Expected callback to be provided\");\n\n                case 5:\n                  if (this.contract.address) {\n                    e.next = 7;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", r(\"Smart contract is missing address\"));\n\n                case 7:\n                  if (\"event\" === this.abi.type.toLowerCase()) {\n                    e.next = 9;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", r(\"Invalid method type for event watching\"));\n\n                case 9:\n                  if (this.tronWeb.eventServer) {\n                    e.next = 11;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", r(\"No event server configured\"));\n\n                case 11:\n                  return n = !1, i = !1, s = new Date().getTime(), o = function () {\n                    var e = v()(h.a.mark(function e() {\n                      var r, n, o, a, d;\n                      return h.a.wrap(function (e) {\n                        for (;;) {\n                          switch (e.prev = e.next) {\n                            case 0:\n                              return e.prev = 0, e.next = 3, u.tronWeb.getEventResult(u.contract.address, s, u.name);\n\n                            case 3:\n                              return r = e.sent, n = r.sort(function (e, t) {\n                                return t.block - e.block;\n                              }), o = Ze()(n, 1), a = o[0], d = r.filter(function (e, n) {\n                                return !(t.resourceNode && !RegExp(t.resourceNode, \"i\").test(e.resourceNode)) && !r.slice(0, n).some(function (t) {\n                                  return JSON.stringify(t) == JSON.stringify(e);\n                                }) && (!i || e.block > i);\n                              }), a && (i = a.block), e.abrupt(\"return\", d);\n\n                            case 10:\n                              return e.prev = 10, e.t0 = e.catch(0), e.abrupt(\"return\", Promise.reject(e.t0));\n\n                            case 13:\n                            case \"end\":\n                              return e.stop();\n                          }\n                        }\n                      }, e, this, [[0, 10]]);\n                    }));\n                    return function () {\n                      return e.apply(this, arguments);\n                    };\n                  }(), a = function a() {\n                    n && clearInterval(n), n = setInterval(function () {\n                      o().then(function (e) {\n                        return e.forEach(function (e) {\n                          r(null, ze.parseEvent(e, u.abi));\n                        });\n                      }).catch(function (e) {\n                        return r(e);\n                      });\n                    }, 3e3);\n                  }, e.next = 18, o();\n\n                case 18:\n                  return a(), e.abrupt(\"return\", {\n                    start: a(),\n                    stop: function stop() {\n                      n && (clearInterval(n), n = !1);\n                    }\n                  });\n\n                case 20:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }]), e;\n  }(),\n      nt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],\n          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n      if (g()(this, e), !t || !t instanceof it) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = ze.promiseInjector(this), this.address = n, this.abi = r, this.eventListener = !1, this.bytecode = !1, this.deployed = !1, this.lastBlock = !1, this.methods = {}, this.methodInstances = {}, this.props = [], this.tronWeb.isAddress(n) ? this.deployed = !0 : this.address = !1, this.loadAbi(r);\n    }\n\n    return m()(e, [{\n      key: \"_getEvents\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n,\n              i,\n              s,\n              o,\n              a = this,\n              u = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return t = u.length > 0 && void 0 !== u[0] ? u[0] : {}, e.next = 3, this.tronWeb.getEventResult(this.address);\n\n                case 3:\n                  return r = e.sent, n = r.sort(function (e, t) {\n                    return t.block - e.block;\n                  }), i = Ze()(n, 1), s = i[0], o = r.filter(function (e, n) {\n                    return !(t.resourceNode && !RegExp(t.resourceNode, \"i\").test(e.resourceNode)) && !r.slice(0, n).some(function (t) {\n                      return JSON.stringify(t) == JSON.stringify(e);\n                    }) && (!a.lastBlock || e.block > a.lastBlock);\n                  }), s && (this.lastBlock = s.block), e.abrupt(\"return\", o);\n\n                case 8:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_startEventListener\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n = this,\n              i = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = i.length > 0 && void 0 !== i[0] ? i[0] : {}, r = i.length > 1 ? i[1] : void 0, ze.isFunction(t) && (r = t, t = {}), this.eventListener && clearInterval(this.eventListener), this.tronWeb.eventServer) {\n                    e.next = 6;\n                    break;\n                  }\n\n                  throw new Error(\"Event server is not configured\");\n\n                case 6:\n                  if (this.address) {\n                    e.next = 8;\n                    break;\n                  }\n\n                  throw new Error(\"Contract is not configured with an address\");\n\n                case 8:\n                  return this.eventCallback = r, e.next = 11, this._getEvents(t);\n\n                case 11:\n                  this.eventListener = setInterval(function () {\n                    n._getEvents(t).then(function (e) {\n                      return e.forEach(function (e) {\n                        n.eventCallback && n.eventCallback(e);\n                      });\n                    }).catch(function (e) {\n                      console.error(\"Failed to get event list\", e);\n                    });\n                  }, 3e3);\n\n                case 12:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_stopEventListener\",\n      value: function value() {\n        this.eventListener && (clearInterval(this.eventListener), this.eventListener = !1, this.eventCallback = !1);\n      }\n    }, {\n      key: \"hasProperty\",\n      value: function value(e) {\n        return this.hasOwnProperty(e) || this.__proto__.hasOwnProperty(e);\n      }\n    }, {\n      key: \"loadAbi\",\n      value: function value(e) {\n        var t = this;\n        this.abi = e, this.methods = {}, this.props.forEach(function (e) {\n          return delete t[e];\n        }), e.forEach(function (e) {\n          if (\"constructor\" !== e.type.toLowerCase()) {\n            var r = new rt(t, e),\n                n = r.onMethod.bind(r),\n                i = r.name,\n                s = r.functionSelector,\n                o = r.signature;\n            t.methods[i] = n, t.methods[s] = n, t.methods[o] = n, t.methodInstances[i] = r, t.methodInstances[s] = r, t.methodInstances[o] = r, t.hasProperty(i) || (t[i] = n, t.props.push(i)), t.hasProperty(s) || (t[s] = n, t.props.push(s)), t.hasProperty(o) || (t[o] = n, t.props.push(o));\n          }\n        });\n      }\n    }, {\n      key: \"decodeInput\",\n      value: function value(e) {\n        var t = e.substring(0, 8),\n            r = e.substring(8);\n        if (!this.methodInstances[t]) throw new Error(\"Contract method \" + t + \" not found\");\n        return {\n          name: this.methodInstances[t].name,\n          params: this.methodInstances[t].decodeInput(r)\n        };\n      }\n    }, {\n      key: \"new\",\n      value: function () {\n        var e = v()(h.a.mark(function e(t) {\n          var r,\n              n,\n              i,\n              s,\n              o,\n              a,\n              u = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], ze.isFunction(r) && (n = r, r = this.tronWeb.defaultPrivateKey), n) {\n                    e.next = 5;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.new, t, r));\n\n                case 5:\n                  return e.prev = 5, i = this.tronWeb.address.fromPrivateKey(r), e.next = 9, this.tronWeb.transactionBuilder.createSmartContract(t, i);\n\n                case 9:\n                  return s = e.sent, e.next = 12, this.tronWeb.trx.sign(s, r);\n\n                case 12:\n                  return o = e.sent, e.next = 15, this.tronWeb.trx.sendRawTransaction(o);\n\n                case 15:\n                  if ((a = e.sent).result) {\n                    e.next = 18;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", n(\"Unknown error: \" + JSON.stringify(a, null, 2)));\n\n                case 18:\n                  return e.abrupt(\"return\", this.at(o.contract_address, n));\n\n                case 21:\n                  return e.prev = 21, e.t0 = e.catch(5), e.abrupt(\"return\", n(e.t0));\n\n                case 24:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[5, 21]]);\n        }));\n        return function (t) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"at\",\n      value: function () {\n        var e = v()(h.a.mark(function e(t) {\n          var r,\n              n,\n              i = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (r = i.length > 1 && void 0 !== i[1] && i[1]) {\n                    e.next = 3;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.at, t));\n\n                case 3:\n                  return e.prev = 3, e.next = 6, this.tronWeb.trx.getContract(t);\n\n                case 6:\n                  (n = e.sent).contract_address || r(\"Unknown error: \" + JSON.stringify(n, null, 2)), this.address = n.contract_address, this.bytecode = n.bytecode, this.deployed = !0, this.loadAbi(n.abi.entrys), r(null, this), e.next = 20;\n                  break;\n\n                case 15:\n                  if (e.prev = 15, e.t0 = e.catch(3), !e.t0.toString().includes(\"does not exist\")) {\n                    e.next = 19;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", r(\"Contract has not been deployed on the network\"));\n\n                case 19:\n                  return e.abrupt(\"return\", r(e.t0));\n\n                case 20:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[3, 15]]);\n        }));\n        return function (t) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"events\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (ze.isFunction(e) && (t = e, e = {}), !ze.isFunction(t)) throw new Error(\"Callback function expected\");\n        var r = this;\n        return {\n          start: function start() {\n            var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n            return n ? (r._startEventListener(e, t).then(function () {\n              n();\n            }).catch(function (e) {\n              n(e);\n            }), this) : (r._startEventListener(e, t), this);\n          },\n          stop: function stop() {\n            r._stopEventListener();\n          }\n        };\n      }\n    }]), e;\n  }();\n\n  r.d(t, \"default\", function () {\n    return it;\n  });\n\n  var it = function (e) {\n    function t(e, r) {\n      var n,\n          i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n          s = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n      return g()(this, t), n = x()(this, I()(t).call(this)), ze.isString(e) && (e = new Ve.HttpProvider(e)), ze.isString(r) && (r = new Ve.HttpProvider(r)), n.setFullNode(e), n.setSolidityNode(r), n.setEventServer(i), n.providers = Ve, n.BigNumber = Ke.a, n.defaultBlock = !1, n.defaultPrivateKey = !1, n.defaultAddress = {\n        hex: !1,\n        base58: !1\n      }, [\"sha3\", \"toHex\", \"toUtf8\", \"fromUtf8\", \"toAscii\", \"fromAscii\", \"toDecimal\", \"fromDecimal\", \"toSun\", \"fromSun\", \"toBigNumber\", \"isAddress\", \"compile\", \"createAccount\", \"address\"].forEach(function (e) {\n        n[e] = t[e];\n      }), s && n.setPrivateKey(s), n.transactionBuilder = new Ge(S()(S()(n))), n.trx = new $e(S()(S()(n))), n.witness = new Qe(S()(S()(n))), n.utils = ze, n.injectPromise = ze.promiseInjector(S()(S()(n))), n;\n    }\n\n    return A()(t, e), m()(t, [{\n      key: \"setDefaultBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!1 === e || \"latest\" == e || \"earliest\" == e || 0 === e) return this.defaultBlock = e;\n        if (!ze.isInteger(e) || !e) throw new Error(\"Invalid block ID provided\");\n        this.defaultBlock = Math.abs(e);\n      }\n    }, {\n      key: \"setPrivateKey\",\n      value: function value(e) {\n        try {\n          this.setAddress(this.address.fromPrivateKey(e));\n        } catch (e) {\n          throw new Error(\"Invalid private key provided\");\n        }\n\n        this.defaultPrivateKey = e, this.emit(\"privateKeyChanged\", e);\n      }\n    }, {\n      key: \"setAddress\",\n      value: function value(e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid address provided\");\n        var t = this.address.toHex(e),\n            r = this.address.fromHex(e);\n        this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== r && (this.defaultPrivateKey = !1), this.defaultAddress = {\n          hex: t,\n          base58: r\n        }, this.emit(\"addressChanged\", {\n          hex: t,\n          base58: r\n        });\n      }\n    }, {\n      key: \"isValidProvider\",\n      value: function value(e) {\n        return Object.values(Ve).some(function (t) {\n          return e instanceof t;\n        });\n      }\n    }, {\n      key: \"isEventServerConnected\",\n      value: function value() {\n        var e = this;\n        return !!this.eventServer && C.a.get(this.eventServer.replace(/\\/+$/, \"\") + \"/healthcheck\").then(function () {\n          return !0;\n        }).catch(function () {\n          return C.a.get(e.eventServer.replace(/\\/+$/, \"\") + \"/events?size=1\").then(function (e) {\n            var t = e.data;\n            return Array.isArray(t);\n          }).catch(function () {\n            return !1;\n          });\n        });\n      }\n    }, {\n      key: \"setFullNode\",\n      value: function value(e) {\n        if (ze.isString(e) && (e = new Ve.HttpProvider(e)), !this.isValidProvider(e)) throw new Error(\"Invalid full node provided\");\n        this.fullNode = e, this.fullNode.setStatusPage(\"wallet/getnowblock\");\n      }\n    }, {\n      key: \"setSolidityNode\",\n      value: function value(e) {\n        if (ze.isString(e) && (e = new Ve.HttpProvider(e)), !this.isValidProvider(e)) throw new Error(\"Invalid solidity node provided\");\n        this.solidityNode = e, this.solidityNode.setStatusPage(\"walletsolidity/getnowblock\");\n      }\n    }, {\n      key: \"setEventServer\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!1 !== e && !ze.isValidURL(e)) throw new Error(\"Invalid URL provided for event server\");\n        this.eventServer = e;\n      }\n    }, {\n      key: \"currentProviders\",\n      value: function value() {\n        return {\n          fullNode: this.fullNode,\n          solidityNode: this.solidityNode,\n          eventServer: this.eventServer\n        };\n      }\n    }, {\n      key: \"currentProvider\",\n      value: function value() {\n        return this.currentProviders();\n      }\n    }, {\n      key: \"getEventResult\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (!i) return this.injectPromise(this.getEventResult, e, t, r, n);\n        this.eventServer || i(\"No event server configured\");\n        var s = [];\n        return this.isAddress(e) ? r && !e ? i(\"Usage of event name filtering requires a contract address\") : n && !r ? i(\"Usage of block number filtering requires an event name\") : (e && s.push(this.address.fromHex(e)), r && s.push(r), n && s.push(n), C()(\"\".concat(this.eventServer, \"/event/contract/\").concat(s.join(\"/\"), \"?since=\").concat(t)).then(function (e) {\n          var t = e.data,\n              r = void 0 !== t && t;\n          return r ? ze.isArray(r) ? i(null, r.map(function (e) {\n            return ze.mapEvent(e);\n          })) : i(r) : i(\"Unknown error occurred\");\n        }).catch(function (e) {\n          return i(e.response && e.response.data || e);\n        })) : i(\"Invalid contract address provided\");\n      }\n    }, {\n      key: \"getEventByTransacionID\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? (this.eventServer || t(\"No event server configured\"), C()(\"\".concat(this.eventServer, \"/event/transaction/\").concat(e)).then(function (e) {\n          var r = e.data,\n              n = void 0 !== r && r;\n          return n ? ze.isArray(n) ? t(null, n.map(function (e) {\n            return ze.mapEvent(e);\n          })) : t(n) : t(\"Unknown error occurred\");\n        }).catch(function (e) {\n          return t(e.response && e.response.data || e);\n        })) : this.injectPromise(this.getEventByTransacionID, e);\n      }\n    }, {\n      key: \"contract\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return new nt(this, e, t);\n      }\n    }, {\n      key: \"isConnected\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = r.length > 0 && void 0 !== r[0] && r[0]) {\n                    e.next = 3;\n                    break;\n                  }\n\n                  return e.abrupt(\"return\", this.injectPromise(this.isConnected));\n\n                case 3:\n                  return e.t0 = t, e.next = 6, this.fullNode.isConnected();\n\n                case 6:\n                  return e.t1 = e.sent, e.next = 9, this.solidityNode.isConnected();\n\n                case 9:\n                  return e.t2 = e.sent, e.next = 12, this.isEventServerConnected();\n\n                case 12:\n                  e.t3 = e.sent, e.t4 = {\n                    fullNode: e.t1,\n                    solidityNode: e.t2,\n                    eventServer: e.t3\n                  }, (0, e.t0)(null, e.t4);\n\n                case 15:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }], [{\n      key: \"sha3\",\n      value: function value(e) {\n        return (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1] ? \"0x\" : \"\") + Object(fe.keccak256)(e);\n      }\n    }, {\n      key: \"toHex\",\n      value: function value(e) {\n        if (ze.isBoolean(e)) return t.fromDecimal(+e);\n        if (ze.isBigNumber(e)) return t.fromDecimal(e);\n        if (\"object\" === c()(e)) return t.fromUtf8(JSON.stringify(e));\n\n        if (ze.isString(e)) {\n          if (/^(-|)0x/.test(e)) return e;\n          if (!isFinite(e)) return t.fromUtf8(e);\n        }\n\n        return t.fromDecimal(e);\n      }\n    }, {\n      key: \"toUtf8\",\n      value: function value(e) {\n        return e = e.replace(/^0x/, \"\"), Buffer.from(e, \"hex\").toString(\"utf8\");\n      }\n    }, {\n      key: \"fromUtf8\",\n      value: function value(e) {\n        return \"0x\" + Buffer.from(e, \"utf8\").toString(\"hex\");\n      }\n    }, {\n      key: \"toAscii\",\n      value: function value(e) {\n        return e = e.replace(/^0x/, \"\"), Buffer.from(e, \"hex\").toString(\"ascii\");\n      }\n    }, {\n      key: \"fromAscii\",\n      value: function value(e, t) {\n        return \"0x\" + Buffer.from(e, \"ascii\").toString(\"hex\").padEnd(t, \"0\");\n      }\n    }, {\n      key: \"toDecimal\",\n      value: function value(e) {\n        return t.toBigNumber(e).toNumber();\n      }\n    }, {\n      key: \"fromDecimal\",\n      value: function value(e) {\n        var r = t.toBigNumber(e),\n            n = r.toString(16);\n        return r.isLessThan(0) ? \"-0x\" + n.substr(1) : \"0x\" + n;\n      }\n    }, {\n      key: \"fromSun\",\n      value: function value(e) {\n        var r = t.toBigNumber(e).div(1e6);\n        return ze.isBigNumber(e) ? r : r.toString(10);\n      }\n    }, {\n      key: \"toSun\",\n      value: function value(e) {\n        var r = t.toBigNumber(e).times(1e6);\n        return ze.isBigNumber(e) ? r : r.toString(10);\n      }\n    }, {\n      key: \"toBigNumber\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n        return ze.isBigNumber(e) ? e : !ze.isString(e) || 0 !== e.indexOf(\"0x\") && 0 !== e.indexOf(\"-0x\") ? new Ke.a(e.toString(10), 10) : new Ke.a(e.replace(\"0x\", \"\"), 16);\n      }\n    }, {\n      key: \"isAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        return !!ze.isString(e) && (42 === e.length ? t.isAddress(ze.crypto.getBase58CheckAddress(ze.code.hexStr2byteArray(e))) : ze.crypto.isAddressValid(e));\n      }\n    }, {\n      key: \"compile\",\n      value: function value(e) {}\n    }, {\n      key: \"createAccount\",\n      value: function () {\n        var e = v()(h.a.mark(function e() {\n          var t,\n              r,\n              n = arguments;\n          return h.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return t = n.length > 0 && void 0 !== n[0] && n[0], r = ze.accounts.generateAccount(), t && t(null, r), e.abrupt(\"return\", r);\n\n                case 4:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"address\",\n      get: function get() {\n        return {\n          fromHex: function fromHex(e) {\n            return ze.isHex(e) ? ze.crypto.getBase58CheckAddress(ze.code.hexStr2byteArray(e)) : e;\n          },\n          toHex: function toHex(e) {\n            return ze.isHex(e) ? e.toLowerCase().replace(/^0x/, \"41\") : ze.code.byteArray2hexStr(ze.crypto.decodeBase58Address(e)).toLowerCase();\n          },\n          fromPrivateKey: function fromPrivateKey(e) {\n            try {\n              return ze.crypto.pkToAddress(e);\n            } catch (e) {\n              return !1;\n            }\n          }\n        };\n      }\n    }]), t;\n  }(Je.a);\n\n  N()(it, \"providers\", Ve), N()(it, \"BigNumber\", Ke.a);\n}]).default;","map":null,"metadata":{},"sourceType":"script"}