{"ast":null,"code":"var _jsxFileName = \"/Users/roshni16/TronLink-Demo-Messages/src/components/Message/index.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport './Message.scss';\n\nvar Message = function Message(props) {\n  var _props$message = props.message,\n      message = _props$message.message,\n      owner = _props$message.owner,\n      timestamp = _props$message.timestamp,\n      tips = _props$message.tips,\n      messageID = props.messageID,\n      featured = props.featured,\n      tippable = props.tippable,\n      requiresTronLink = props.requiresTronLink,\n      onTip = props.onTip;\n  return React.createElement(\"div\", {\n    className: \"message-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'message' + (tippable ? ' tippable' : '') + (requiresTronLink ? ' requiresTronLink' : ''),\n    onClick: function onClick() {\n      return onTip(messageID);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"owner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, owner), featured && React.createElement(\"div\", {\n    className: \"star\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u2605\")), React.createElement(Scrollbars, {\n    style: {\n      width: 330,\n      height: 85,\n      marginBottom: 6\n    },\n    autoHide: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, message)), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, moment(timestamp * 1000).fromNow()), tips.count ? React.createElement(\"div\", {\n    className: \"tips\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, (tips.amount / 1000000).toLocaleString(), \" TRX\"), \" from \", tips.count.toLocaleString(), \" tip\", tips.count === 1 ? '' : 's') : '')));\n};\n\nexport default Message;","map":{"version":3,"sources":["/Users/roshni16/TronLink-Demo-Messages/src/components/Message/index.js"],"names":["React","moment","Scrollbars","Message","props","message","owner","timestamp","tips","messageID","featured","tippable","requiresTronLink","onTip","width","height","marginBottom","fromNow","count","amount","toLocaleString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,OAAO,gBAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAAA,uBAajBA,KAbiB,CAEjBC,OAFiB;AAAA,MAGbA,OAHa,kBAGbA,OAHa;AAAA,MAIbC,KAJa,kBAIbA,KAJa;AAAA,MAKbC,SALa,kBAKbA,SALa;AAAA,MAMbC,IANa,kBAMbA,IANa;AAAA,MAQjBC,SARiB,GAajBL,KAbiB,CAQjBK,SARiB;AAAA,MASjBC,QATiB,GAajBN,KAbiB,CASjBM,QATiB;AAAA,MAUjBC,QAViB,GAajBP,KAbiB,CAUjBO,QAViB;AAAA,MAWjBC,gBAXiB,GAajBR,KAbiB,CAWjBQ,gBAXiB;AAAA,MAYjBC,KAZiB,GAajBT,KAbiB,CAYjBS,KAZiB;AAerB,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,aAAaF,QAAQ,GAAG,WAAH,GAAiB,EAAtC,KAA6CC,gBAAgB,GAAG,mBAAH,GAAyB,EAAtF,CAAjB;AAA6G,IAAA,OAAO,EAAG;AAAA,aAAMC,KAAK,CAACJ,SAAD,CAAX;AAAA,KAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KADN,CADJ,EAIMI,QAAQ,IAAI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJlB,CADJ,EASI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,EAAtB;AAA0BC,MAAAA,YAAY,EAAE;AAAxC,KAAnB;AAAgE,IAAA,QAAQ,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMX,OADN,CADJ,CATJ,EAcI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,MAAM,CAACM,SAAS,GAAG,IAAb,CAAN,CAAyBU,OAAzB,EADN,CADJ,EAIMT,IAAI,CAACU,KAAL,GAAa;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU,CAACV,IAAI,CAACW,MAAL,GAAc,OAAf,EAAwBC,cAAxB,EAAV,SADW,YAC8DZ,IAAI,CAACU,KAAL,CAAWE,cAAX,EAD9D,UACiGZ,IAAI,CAACU,KAAL,KAAe,CAAf,GAAmB,EAAnB,GAAwB,GADzH,CAAb,GAEO,EANb,CAdJ,CADJ,CADJ;AA2BH,CA1CD;;AA4CA,eAAef,OAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport './Message.scss';\n\nconst Message = props => {\n    const {\n        message: {\n            message,\n            owner,\n            timestamp,\n            tips\n        },\n        messageID,\n        featured,\n        tippable,\n        requiresTronLink,\n        onTip\n    } = props;\n\n    return (\n        <div className='message-wrapper'>\n            <div className={ 'message' + (tippable ? ' tippable' : '') + (requiresTronLink ? ' requiresTronLink' : '') } onClick={ () => onTip(messageID) }>\n                <div className='header'>\n                    <div className='owner'>\n                        { owner }\n                    </div>\n                    { featured && <div className='star'>\n                        &#9733;\n                    </div> }\n                </div>\n                <Scrollbars style={{ width: 330, height: 85, marginBottom: 6 }} autoHide>\n                    <div className='body'>\n                        { message }\n                    </div>\n                </Scrollbars>\n                <div className='footer'>\n                    <div className='timestamp'>\n                        { moment(timestamp * 1000).fromNow() }\n                    </div>\n                    { tips.count ? <div className='tips'>\n                        <strong>{ (tips.amount / 1000000).toLocaleString() } TRX</strong> from { tips.count.toLocaleString() } tip{ tips.count === 1 ? '' : 's' }\n                    </div> : '' }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}